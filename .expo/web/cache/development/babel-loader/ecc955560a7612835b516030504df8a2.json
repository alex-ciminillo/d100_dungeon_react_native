{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport \"./Attributes.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Attributes = function Attributes(props) {\n  var onChange = props.onChange,\n      attributes = props.attributes,\n      onRoll = props.onRoll;\n\n  var updateAttribute = function updateAttribute(e) {\n    e.preventDefault();\n    var val = e.target.value;\n\n    if (val) {\n      val = parseInt(val);\n    }\n\n    var attr = e.target.id.replace(\"attrib-\", \"\");\n\n    var newState = _objectSpread({}, attributes);\n\n    newState[attr].total = val;\n    onChange(newState);\n  };\n\n  var rollDice = function rollDice(e) {\n    e.preventDefault();\n    var attr = e.currentTarget.id.replace(\"roll-\", \"\");\n\n    if (attr === \"all\") {\n      return onRoll([\"3d6\", \"3d6\", \"3d6\", \"3d6\", \"3d6\", \"3d6\"], attr);\n    }\n\n    onRoll(\"3d6\", attr);\n  };\n\n  return _jsxs(\"div\", {\n    className: \"attributes\",\n    children: [_jsx(\"button\", {\n      id: \"roll-all\",\n      className: \"button\",\n      \"aria-label\": \"Roll Attributes Points\",\n      onClick: rollDice,\n      children: \"Roll All\"\n    }), Object.entries(attributes).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          values = _ref2[1];\n\n      return _jsxs(\"div\", {\n        className: \"attrib-group\",\n        children: [_jsx(\"div\", {\n          className: \"attrib-name\",\n          children: _jsx(\"button\", {\n            className: \"button button--secondary\",\n            id: \"roll-\" + key,\n            onClick: rollDice,\n            children: values.name\n          })\n        }), _jsx(\"div\", {\n          className: \"attrib-val\",\n          children: _jsx(\"input\", {\n            id: \"attrib-\" + key,\n            className: \"attrib-input\",\n            type: \"number\",\n            inputMode: \"numeric\",\n            min: 3,\n            max: 18,\n            value: values.total,\n            onChange: updateAttribute\n          })\n        })]\n      }, key);\n    })]\n  });\n};\n\nexport default Attributes;","map":{"version":3,"names":["Attributes","props","onChange","attributes","onRoll","updateAttribute","e","preventDefault","val","target","value","parseInt","attr","id","replace","newState","total","rollDice","currentTarget","Object","entries","map","key","values","name"],"sources":["/home/alex/react-dice/components/Attributes.js"],"sourcesContent":["import \"./Attributes.css\";\n\nconst Attributes = (props) => {\n  const { onChange, attributes, onRoll } = props;\n\n  // update attribute from numerical input\n  const updateAttribute = (e) => {\n    e.preventDefault();\n    let val = e.target.value;\n    if (val) {\n      val = parseInt(val);\n    }\n    const attr = e.target.id.replace(\"attrib-\", \"\");\n\n    const newState = { ...attributes };\n    newState[attr].total = val;\n    onChange(newState);\n  };\n\n  // roll dice on button click\n  const rollDice = (e) => {\n    e.preventDefault();\n    const attr = e.currentTarget.id.replace(\"roll-\", \"\");\n    if (attr === \"all\") {\n      return onRoll([\"3d6\", \"3d6\", \"3d6\", \"3d6\", \"3d6\", \"3d6\"], attr);\n    }\n    onRoll(\"3d6\", attr);\n  };\n\n  return (\n    <div className=\"attributes\">\n      <button\n        id=\"roll-all\"\n        className=\"button\"\n        aria-label=\"Roll Attributes Points\"\n        onClick={rollDice}\n      >\n        Roll All\n      </button>\n      {Object.entries(attributes).map(([key, values]) => {\n        return (\n          <div className=\"attrib-group\" key={key}>\n            <div className=\"attrib-name\">\n              <button\n                className=\"button button--secondary\"\n                id={`roll-${key}`}\n                onClick={rollDice}\n              >\n                {values.name}\n              </button>\n            </div>\n            <div className=\"attrib-val\">\n              <input\n                id={`attrib-${key}`}\n                className=\"attrib-input\"\n                type=\"number\"\n                inputMode=\"numeric\"\n                min={3}\n                max={18}\n                value={values.total}\n                onChange={updateAttribute}\n              />\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Attributes;\n"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;EAC5B,IAAQC,QAAR,GAAyCD,KAAzC,CAAQC,QAAR;EAAA,IAAkBC,UAAlB,GAAyCF,KAAzC,CAAkBE,UAAlB;EAAA,IAA8BC,MAA9B,GAAyCH,KAAzC,CAA8BG,MAA9B;;EAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAO;IAC7BA,CAAC,CAACC,cAAF;IACA,IAAIC,GAAG,GAAGF,CAAC,CAACG,MAAF,CAASC,KAAnB;;IACA,IAAIF,GAAJ,EAAS;MACPA,GAAG,GAAGG,QAAQ,CAACH,GAAD,CAAd;IACD;;IACD,IAAMI,IAAI,GAAGN,CAAC,CAACG,MAAF,CAASI,EAAT,CAAYC,OAAZ,CAAoB,SAApB,EAA+B,EAA/B,CAAb;;IAEA,IAAMC,QAAQ,qBAAQZ,UAAR,CAAd;;IACAY,QAAQ,CAACH,IAAD,CAAR,CAAeI,KAAf,GAAuBR,GAAvB;IACAN,QAAQ,CAACa,QAAD,CAAR;EACD,CAXD;;EAcA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACX,CAAD,EAAO;IACtBA,CAAC,CAACC,cAAF;IACA,IAAMK,IAAI,GAAGN,CAAC,CAACY,aAAF,CAAgBL,EAAhB,CAAmBC,OAAnB,CAA2B,OAA3B,EAAoC,EAApC,CAAb;;IACA,IAAIF,IAAI,KAAK,KAAb,EAAoB;MAClB,OAAOR,MAAM,CAAC,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,CAAD,EAA6CQ,IAA7C,CAAb;IACD;;IACDR,MAAM,CAAC,KAAD,EAAQQ,IAAR,CAAN;EACD,CAPD;;EASA,OACE;IAAK,SAAS,EAAC,YAAf;IAAA,WACE;MACE,EAAE,EAAC,UADL;MAEE,SAAS,EAAC,QAFZ;MAGE,cAAW,wBAHb;MAIE,OAAO,EAAEK,QAJX;MAAA;IAAA,EADF,EASGE,MAAM,CAACC,OAAP,CAAejB,UAAf,EAA2BkB,GAA3B,CAA+B,gBAAmB;MAAA;MAAA,IAAjBC,GAAiB;MAAA,IAAZC,MAAY;;MACjD,OACE;QAAK,SAAS,EAAC,cAAf;QAAA,WACE;UAAK,SAAS,EAAC,aAAf;UAAA,UACE;YACE,SAAS,EAAC,0BADZ;YAEE,EAAE,YAAUD,GAFd;YAGE,OAAO,EAAEL,QAHX;YAAA,UAKGM,MAAM,CAACC;UALV;QADF,EADF,EAUE;UAAK,SAAS,EAAC,YAAf;UAAA,UACE;YACE,EAAE,cAAYF,GADhB;YAEE,SAAS,EAAC,cAFZ;YAGE,IAAI,EAAC,QAHP;YAIE,SAAS,EAAC,SAJZ;YAKE,GAAG,EAAE,CALP;YAME,GAAG,EAAE,EANP;YAOE,KAAK,EAAEC,MAAM,CAACP,KAPhB;YAQE,QAAQ,EAAEX;UARZ;QADF,EAVF;MAAA,GAAmCiB,GAAnC,CADF;IAyBD,CA1BA,CATH;EAAA,EADF;AAuCD,CAlED;;AAoEA,eAAetB,UAAf"},"metadata":{},"sourceType":"module"}