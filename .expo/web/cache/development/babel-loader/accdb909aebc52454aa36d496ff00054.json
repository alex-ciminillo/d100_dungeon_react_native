{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Room from \"../rooms/Room\";\nimport { room1 } from \"./../../src/image/index\";\nimport { room2 } from \"./../../src/image/index\";\nimport { room3 } from \"./../../src/image/index\";\nimport { room4 } from \"./../../src/image/index\";\nimport { room5 } from \"./../../src/image/index\";\nimport { room6 } from \"./../../src/image/index\";\nimport { room7 } from \"./../../src/image/index\";\nimport { room8 } from \"./../../src/image/index\";\nimport { room9 } from \"./../../src/image/index\";\nimport { room10 } from \"./../../src/image/index\";\nimport { useState, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Board() {\n  var grid = new Array();\n\n  for (var i = 0; i < 5; i++) {\n    grid.push([]);\n  }\n\n  grid.forEach(function (row) {\n    for (var _i = 0; _i < 5; _i++) {\n      row.push('');\n    }\n  });\n\n  var _useState = useState(grid),\n      _useState2 = _slicedToArray(_useState, 2),\n      map = _useState2[0],\n      setMap = _useState2[1];\n\n  var entrance = [Math.floor(grid.length - 1), Math.floor(grid[grid.length - 1].length / 2)];\n  console.log(entrance);\n  console.log(grid);\n  placeRoom(entrance[0], entrance[1]);\n\n  function getRandomRoom() {\n    var roomArray = [room1, room2, room3, room4, room5, room6, room7, room8, room9, room10];\n    return roomArray[Math.floor(Math.random() * roomArray.length)];\n  }\n\n  function placeRoom(row, col) {\n    var newMap = _toConsumableArray(map);\n\n    newMap[row][col] = getRandomRoom();\n    setMap(newMap);\n  }\n\n  return _jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      backgroundColor: 'black',\n      width: '100%',\n      height: '90%',\n      position: \"absolute\",\n      display: 'flex',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(5, 100px)',\n        gridTemplateRows: 'repeat(5, 100px)'\n      },\n      children: grid.map(function (row, idx) {\n        return row.map(function (column, idx2) {\n          if (grid[idx][idx2] !== '') {\n            return _jsx(Room, {\n              room: grid[idx][idx2]\n            }, idx + \" + \" + idx2);\n          } else {\n            return _jsx(Room, {\n              placeRoom: placeRoom,\n              row: idx,\n              col: idx2\n            }, idx + \" + \" + idx2);\n          }\n        });\n      })\n    })\n  });\n}","map":{"version":3,"names":["Room","room1","room2","room3","room4","room5","room6","room7","room8","room9","room10","useState","useEffect","Board","grid","Array","i","push","forEach","row","map","setMap","entrance","Math","floor","length","console","log","placeRoom","getRandomRoom","roomArray","random","col","newMap","overflow","backgroundColor","width","height","position","display","justifyContent","alignContent","alignItems","gridTemplateColumns","gridTemplateRows","idx","column","idx2"],"sources":["/home/alex/react-dice/components/board/Board.js"],"sourcesContent":["\nimport Room from \"../rooms/Room\"\nimport { room1 } from \"./../../src/image/index\"\nimport { room2 } from \"./../../src/image/index\"\nimport { room3 } from \"./../../src/image/index\"\nimport { room4 } from \"./../../src/image/index\"\nimport { room5 } from \"./../../src/image/index\"\nimport { room6 } from \"./../../src/image/index\"\nimport { room7 } from \"./../../src/image/index\"\nimport { room8 } from \"./../../src/image/index\"\nimport { room9 } from \"./../../src/image/index\"\nimport { room10 } from \"./../../src/image/index\"\n\nimport { useState, useEffect } from \"react\"\n\nexport default function Board() {\n\n    \n\n    let grid = new Array()\n    for (let i = 0; i < 5; i++) {\n        grid.push([])\n    }\n    grid.forEach(row => {\n        for (let i = 0; i < 5; i++) {\n            row.push('')\n        }\n    })\n\n    const [map, setMap] = useState(grid)\n\n    const entrance = [Math.floor(grid.length - 1), Math.floor(grid[grid.length - 1].length / 2)]\n    \n    console.log(entrance)\n    console.log(grid)\n    placeRoom(entrance[0], entrance[1])\n\n    function getRandomRoom() {\n        const roomArray = [room1, room2, room3, room4, room5, room6, room7, room8, room9, room10]\n        return roomArray[Math.floor(Math.random()*roomArray.length)];\n    }\n\n    function placeRoom(row, col) {\n        let newMap = [...map]\n        newMap[row][col] = getRandomRoom();\n        setMap(newMap);\n    }\n\n\n    return (\n        <div style={{overflow: 'hidden', backgroundColor: 'black', width: '100%', height: '90%', position: \"absolute\", display: 'flex', justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}>\n            <div style={{display: 'grid', gridTemplateColumns: 'repeat(5, 100px)', gridTemplateRows: 'repeat(5, 100px)'}} >\n                {grid.map((row, idx) => {\n                    return row.map((column, idx2) => {\n                        if (grid[idx][idx2] !== '') {\n                            return <Room key={`${idx} + ${idx2}`} room={grid[idx][idx2]} />\n                        } else {\n                            return <Room key={`${idx} + ${idx2}`} placeRoom={placeRoom} row={idx} col={idx2} />\n                        }\n                    })\n                })}\n            </div>\n        </div>\n    )\n\n\n}\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}