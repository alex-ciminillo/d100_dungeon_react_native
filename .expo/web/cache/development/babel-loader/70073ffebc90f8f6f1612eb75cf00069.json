{"ast":null,"code":"import Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Room(_ref) {\n  var setDiceInput = _ref.setDiceInput,\n      throw_d100 = _ref.throw_d100,\n      rollRoom = _ref.rollRoom,\n      dir = _ref.dir,\n      moveLocation = _ref.moveLocation,\n      room = _ref.room,\n      placeRoom = _ref.placeRoom,\n      row = _ref.row,\n      col = _ref.col,\n      currLocation = _ref.currLocation,\n      setLocation = _ref.setLocation,\n      imgSize = _ref.imgSize;\n\n  function goToNextRoom(row, col) {\n    var dir;\n    if (currLocation[0] + 1 === row && currLocation[1] === col) dir = 'down';\n    if (currLocation[0] - 1 === row && currLocation[1] === col) dir = 'up';\n    if (currLocation[0] === row && currLocation[1] + 1 === col) dir = 'right';\n    if (currLocation[0] === row && currLocation[1] - 1 === col) dir = 'left';\n    moveLocation(row, col, dir);\n  }\n\n  var rotation = '0deg';\n  if (imgSize == null) imgSize = '100px';\n  if (dir === 'right') rotation = '90deg';\n  if (dir === 'left') rotation = '-90deg';\n  if (dir === 'down') rotation = '180deg';\n\n  function rollForTheRoom(row, col) {\n    if (rollRoom === 'On') {\n      var label = document.getElementById('label');\n      label.innerHTML = '';\n      throw_d100(document.querySelector('[data-dice-body]'));\n      setTimeout(function checkRoll() {\n        if (label.innerHTML === '') {\n          setTimeout(checkRoll(), 10000);\n        } else {\n          setDiceInput(label.innerHTML.split());\n          placeRoom(row, col);\n        }\n      }, 10000);\n    } else {\n      placeRoom(row, col);\n    }\n  }\n\n  function getRoom() {\n    if (room != null) {\n      if (currLocation[0] === row && currLocation[1] === col) {\n        return _jsx(\"div\", {\n          onClick: function onClick() {\n            goToNextRoom(row, col);\n          },\n          children: _jsx(Image, {\n            style: {\n              transform: \"rotate(\" + rotation + \")\",\n              width: \"\" + imgSize,\n              height: \"\" + imgSize,\n              borderTop: '2px solid green',\n              borderLeft: '2px solid green',\n              borderBottom: '2px solid green',\n              borderRight: '2px solid green'\n            },\n            source: room\n          })\n        });\n      }\n\n      return _jsx(\"div\", {\n        onClick: function onClick() {\n          goToNextRoom(row, col);\n        },\n        children: _jsx(Image, {\n          style: {\n            transform: \"rotate(\" + rotation + \")\",\n            width: \"\" + imgSize,\n            height: \"\" + imgSize\n          },\n          source: room\n        })\n      });\n    } else {\n      return _jsx(\"div\", {\n        onClick: function onClick() {\n          rollForTheRoom(row, col);\n        },\n        children: _jsx(\"div\", {\n          style: {\n            width: \"\" + imgSize,\n            height: \"\" + imgSize\n          }\n        })\n      });\n    }\n  }\n\n  return _jsx(\"div\", {\n    children: getRoom()\n  });\n}","map":{"version":3,"names":["Room","setDiceInput","throw_d100","rollRoom","dir","moveLocation","room","placeRoom","row","col","currLocation","setLocation","imgSize","goToNextRoom","rotation","rollForTheRoom","label","document","getElementById","innerHTML","querySelector","setTimeout","checkRoll","split","getRoom","transform","width","height","borderTop","borderLeft","borderBottom","borderRight"],"sources":["/home/alex/react-dice/components/rooms/Room.js"],"sourcesContent":["\nimport { Image } from 'react-native'\n\nexport default function Room( {setDiceInput, throw_d100, rollRoom, dir, moveLocation, room, placeRoom, row, col, currLocation, setLocation, imgSize} ) {\n\n\n    function goToNextRoom(row, col) {\n        let dir;\n        if (currLocation[0] + 1 === row && currLocation[1] === col) dir = 'down'\n        if (currLocation[0] - 1 === row && currLocation[1] === col) dir = 'up'\n        if (currLocation[0] === row && currLocation[1] + 1 === col) dir = 'right'\n        if (currLocation[0] === row && currLocation[1] - 1 === col) dir = 'left'\n        moveLocation(row, col, dir)\n    }\n\n    let rotation = '0deg'\n    if (imgSize == null) imgSize = '100px';\n    if (dir === 'right') rotation = '90deg'\n    if (dir === 'left') rotation = '-90deg'\n    if (dir === 'down') rotation = '180deg'\n\n    function rollForTheRoom(row, col) {\n\n        if (rollRoom === 'On') {\n            let label = document.getElementById('label')\n            label.innerHTML = ''\n            throw_d100(document.querySelector('[data-dice-body]'))\n            setTimeout(function checkRoll() {\n                if (label.innerHTML === '') {\n                    setTimeout(checkRoll(), 10000)\n                } else {\n                    setDiceInput(label.innerHTML.split( ))\n                    placeRoom(row,col)\n                }\n            }, 10000)\n            \n        } else {\n            placeRoom(row, col)\n        }\n\n    }\n    \n    function getRoom() {\n\n        if (room != null) {\n\n                // add border for current room\n                if (currLocation[0] === row && currLocation[1] === col) {\n                    return <div onClick={()=>{goToNextRoom(row, col)}} >\n                            <Image style={{transform: `rotate(${rotation})`,width: `${imgSize}`, height: `${imgSize}`, borderTop: '2px solid green', borderLeft: '2px solid green', borderBottom: '2px solid green', borderRight: '2px solid green'}} source={room} />\n                        </div>\n                }\n                // no border for other rooms\n                return <div onClick={()=>{goToNextRoom(row, col)}} >\n                            <Image style={{transform: `rotate(${rotation})`,width: `${imgSize}`, height: `${imgSize}`}} source={room} />\n                        </div>\n            \n\n        } else {\n            return <div onClick={()=>{rollForTheRoom(row, col)}} >\n                        <div style={{width: `${imgSize}`, height: `${imgSize}`}} ></div>\n                    </div>\n        }\n\n    }\n    \n    return (\n        <div  >{getRoom()}</div>\n        \n    )\n\n    \n\n}\n\n\n\n\n\n\n\n"],"mappings":";;AAGA,eAAe,SAASA,IAAT,OAAwI;EAAA,IAAxHC,YAAwH,QAAxHA,YAAwH;EAAA,IAA1GC,UAA0G,QAA1GA,UAA0G;EAAA,IAA9FC,QAA8F,QAA9FA,QAA8F;EAAA,IAApFC,GAAoF,QAApFA,GAAoF;EAAA,IAA/EC,YAA+E,QAA/EA,YAA+E;EAAA,IAAjEC,IAAiE,QAAjEA,IAAiE;EAAA,IAA3DC,SAA2D,QAA3DA,SAA2D;EAAA,IAAhDC,GAAgD,QAAhDA,GAAgD;EAAA,IAA3CC,GAA2C,QAA3CA,GAA2C;EAAA,IAAtCC,YAAsC,QAAtCA,YAAsC;EAAA,IAAxBC,WAAwB,QAAxBA,WAAwB;EAAA,IAAXC,OAAW,QAAXA,OAAW;;EAGnJ,SAASC,YAAT,CAAsBL,GAAtB,EAA2BC,GAA3B,EAAgC;IAC5B,IAAIL,GAAJ;IACA,IAAIM,YAAY,CAAC,CAAD,CAAZ,GAAkB,CAAlB,KAAwBF,GAAxB,IAA+BE,YAAY,CAAC,CAAD,CAAZ,KAAoBD,GAAvD,EAA4DL,GAAG,GAAG,MAAN;IAC5D,IAAIM,YAAY,CAAC,CAAD,CAAZ,GAAkB,CAAlB,KAAwBF,GAAxB,IAA+BE,YAAY,CAAC,CAAD,CAAZ,KAAoBD,GAAvD,EAA4DL,GAAG,GAAG,IAAN;IAC5D,IAAIM,YAAY,CAAC,CAAD,CAAZ,KAAoBF,GAApB,IAA2BE,YAAY,CAAC,CAAD,CAAZ,GAAkB,CAAlB,KAAwBD,GAAvD,EAA4DL,GAAG,GAAG,OAAN;IAC5D,IAAIM,YAAY,CAAC,CAAD,CAAZ,KAAoBF,GAApB,IAA2BE,YAAY,CAAC,CAAD,CAAZ,GAAkB,CAAlB,KAAwBD,GAAvD,EAA4DL,GAAG,GAAG,MAAN;IAC5DC,YAAY,CAACG,GAAD,EAAMC,GAAN,EAAWL,GAAX,CAAZ;EACH;;EAED,IAAIU,QAAQ,GAAG,MAAf;EACA,IAAIF,OAAO,IAAI,IAAf,EAAqBA,OAAO,GAAG,OAAV;EACrB,IAAIR,GAAG,KAAK,OAAZ,EAAqBU,QAAQ,GAAG,OAAX;EACrB,IAAIV,GAAG,KAAK,MAAZ,EAAoBU,QAAQ,GAAG,QAAX;EACpB,IAAIV,GAAG,KAAK,MAAZ,EAAoBU,QAAQ,GAAG,QAAX;;EAEpB,SAASC,cAAT,CAAwBP,GAAxB,EAA6BC,GAA7B,EAAkC;IAE9B,IAAIN,QAAQ,KAAK,IAAjB,EAAuB;MACnB,IAAIa,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;MACAF,KAAK,CAACG,SAAN,GAAkB,EAAlB;MACAjB,UAAU,CAACe,QAAQ,CAACG,aAAT,CAAuB,kBAAvB,CAAD,CAAV;MACAC,UAAU,CAAC,SAASC,SAAT,GAAqB;QAC5B,IAAIN,KAAK,CAACG,SAAN,KAAoB,EAAxB,EAA4B;UACxBE,UAAU,CAACC,SAAS,EAAV,EAAc,KAAd,CAAV;QACH,CAFD,MAEO;UACHrB,YAAY,CAACe,KAAK,CAACG,SAAN,CAAgBI,KAAhB,EAAD,CAAZ;UACAhB,SAAS,CAACC,GAAD,EAAKC,GAAL,CAAT;QACH;MACJ,CAPS,EAOP,KAPO,CAAV;IASH,CAbD,MAaO;MACHF,SAAS,CAACC,GAAD,EAAMC,GAAN,CAAT;IACH;EAEJ;;EAED,SAASe,OAAT,GAAmB;IAEf,IAAIlB,IAAI,IAAI,IAAZ,EAAkB;MAGV,IAAII,YAAY,CAAC,CAAD,CAAZ,KAAoBF,GAApB,IAA2BE,YAAY,CAAC,CAAD,CAAZ,KAAoBD,GAAnD,EAAwD;QACpD,OAAO;UAAK,OAAO,EAAE,mBAAI;YAACI,YAAY,CAACL,GAAD,EAAMC,GAAN,CAAZ;UAAuB,CAA1C;UAAA,UACC,KAAC,KAAD;YAAO,KAAK,EAAE;cAACgB,SAAS,cAAYX,QAAZ,MAAV;cAAkCY,KAAK,OAAKd,OAA5C;cAAuDe,MAAM,OAAKf,OAAlE;cAA6EgB,SAAS,EAAE,iBAAxF;cAA2GC,UAAU,EAAE,iBAAvH;cAA0IC,YAAY,EAAE,iBAAxJ;cAA2KC,WAAW,EAAE;YAAxL,CAAd;YAA0N,MAAM,EAAEzB;UAAlO;QADD,EAAP;MAGH;;MAED,OAAO;QAAK,OAAO,EAAE,mBAAI;UAACO,YAAY,CAACL,GAAD,EAAMC,GAAN,CAAZ;QAAuB,CAA1C;QAAA,UACK,KAAC,KAAD;UAAO,KAAK,EAAE;YAACgB,SAAS,cAAYX,QAAZ,MAAV;YAAkCY,KAAK,OAAKd,OAA5C;YAAuDe,MAAM,OAAKf;UAAlE,CAAd;UAA4F,MAAM,EAAEN;QAApG;MADL,EAAP;IAKP,CAdD,MAcO;MACH,OAAO;QAAK,OAAO,EAAE,mBAAI;UAACS,cAAc,CAACP,GAAD,EAAMC,GAAN,CAAd;QAAyB,CAA5C;QAAA,UACK;UAAK,KAAK,EAAE;YAACiB,KAAK,OAAKd,OAAX;YAAsBe,MAAM,OAAKf;UAAjC;QAAZ;MADL,EAAP;IAGH;EAEJ;;EAED,OACI;IAAA,UAAQY,OAAO;EAAf,EADJ;AAOH"},"metadata":{},"sourceType":"module"}