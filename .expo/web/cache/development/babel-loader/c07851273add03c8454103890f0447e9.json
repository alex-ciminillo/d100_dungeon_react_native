{"ast":null,"code":"import Room from \"../rooms/Room\";\nimport { useState, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Board(_ref) {\n  var shiftLR = _ref.shiftLR,\n      setShiftLR = _ref.setShiftLR,\n      shiftUD = _ref.shiftUD,\n      setShiftUD = _ref.setShiftUD,\n      placeRoom = _ref.placeRoom,\n      currLocation = _ref.currLocation,\n      getRandomRoom = _ref.getRandomRoom,\n      moveLocation = _ref.moveLocation,\n      setLocation = _ref.setLocation,\n      roomInput = _ref.roomInput,\n      setRoomInput = _ref.setRoomInput,\n      currRoomObject = _ref.currRoomObject,\n      setRoomObject = _ref.setRoomObject,\n      mapSize = _ref.mapSize,\n      map = _ref.map,\n      setMap = _ref.setMap,\n      entrance = _ref.entrance;\n  useEffect(function () {\n    placeRoom(entrance[0], entrance[1]);\n  }, []);\n  console.log(map);\n  return _jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      backgroundColor: '#F2DA90',\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(\"div\", {\n      style: {\n        marginLeft: shiftLR + \"px\",\n        marginTop: shiftUD + \"px\",\n        display: 'grid',\n        gridTemplateColumns: \"repeat(\" + mapSize + \", 100px)\",\n        gridTemplateRows: \"repeat(\" + mapSize + \", 100px)\"\n      },\n      children: map.map(function (row, idx) {\n        return row.map(function (column, idx2) {\n          if (map[idx][idx2] !== '') {\n            return _jsx(Room, {\n              dir: map[idx][idx2].dir,\n              room: map[idx][idx2].img,\n              row: idx,\n              col: idx2,\n              currLocation: currLocation,\n              setLocation: setLocation,\n              moveLocation: moveLocation\n            }, idx + \" + \" + idx2);\n          } else {\n            return _jsx(Room, {\n              placeRoom: placeRoom,\n              row: idx,\n              col: idx2,\n              currLocation: currLocation,\n              setLocation: setLocation\n            }, idx + \" + \" + idx2);\n          }\n        });\n      })\n    })\n  });\n}","map":{"version":3,"names":["Room","useState","useEffect","Board","shiftLR","setShiftLR","shiftUD","setShiftUD","placeRoom","currLocation","getRandomRoom","moveLocation","setLocation","roomInput","setRoomInput","currRoomObject","setRoomObject","mapSize","map","setMap","entrance","console","log","overflow","backgroundColor","width","height","display","justifyContent","alignContent","alignItems","marginLeft","marginTop","gridTemplateColumns","gridTemplateRows","row","idx","column","idx2","dir","img"],"sources":["/home/alex/react-dice/components/board/Board.js"],"sourcesContent":["\nimport Room from \"../rooms/Room\"\n\n\nimport { useState, useEffect } from \"react\"\n\nexport default function Board({shiftLR, setShiftLR, shiftUD, setShiftUD, placeRoom, currLocation, getRandomRoom, moveLocation, setLocation, roomInput, setRoomInput, currRoomObject, setRoomObject, mapSize, map, setMap, entrance}) {\n    \n    \n    useEffect(() => {\n        placeRoom(entrance[0], entrance[1])\n    }, []);\n\n    console.log(map)\n\n    return (\n        <div style={{overflow: 'hidden', backgroundColor: '#F2DA90', width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}>\n            <div style={{marginLeft:`${shiftLR}px`,marginTop:`${shiftUD}px`,display: 'grid', gridTemplateColumns: `repeat(${mapSize}, 100px)`, gridTemplateRows: `repeat(${mapSize}, 100px)`}} >\n                {map.map((row, idx) => {\n                    return row.map((column, idx2) => {\n                        if (map[idx][idx2] !== '') {\n                            return <Room key={`${idx} + ${idx2}`} dir={map[idx][idx2].dir} room={map[idx][idx2].img} row={idx} col={idx2} currLocation={currLocation} setLocation={setLocation} moveLocation={moveLocation} />\n                        } else {\n                            return <Room key={`${idx} + ${idx2}`} placeRoom={placeRoom} row={idx} col={idx2} currLocation={currLocation} setLocation={setLocation} />\n                        }\n                    })\n                })}\n            </div>\n        </div>\n    )\n\n\n}\n\n\n\n\n\n\n\n\n"],"mappings":"AACA,OAAOA,IAAP;AAGA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,eAAe,SAASC,KAAT,OAAsN;EAAA,IAAtMC,OAAsM,QAAtMA,OAAsM;EAAA,IAA7LC,UAA6L,QAA7LA,UAA6L;EAAA,IAAjLC,OAAiL,QAAjLA,OAAiL;EAAA,IAAxKC,UAAwK,QAAxKA,UAAwK;EAAA,IAA5JC,SAA4J,QAA5JA,SAA4J;EAAA,IAAjJC,YAAiJ,QAAjJA,YAAiJ;EAAA,IAAnIC,aAAmI,QAAnIA,aAAmI;EAAA,IAApHC,YAAoH,QAApHA,YAAoH;EAAA,IAAtGC,WAAsG,QAAtGA,WAAsG;EAAA,IAAzFC,SAAyF,QAAzFA,SAAyF;EAAA,IAA9EC,YAA8E,QAA9EA,YAA8E;EAAA,IAAhEC,cAAgE,QAAhEA,cAAgE;EAAA,IAAhDC,aAAgD,QAAhDA,aAAgD;EAAA,IAAjCC,OAAiC,QAAjCA,OAAiC;EAAA,IAAxBC,GAAwB,QAAxBA,GAAwB;EAAA,IAAnBC,MAAmB,QAAnBA,MAAmB;EAAA,IAAXC,QAAW,QAAXA,QAAW;EAGjOlB,SAAS,CAAC,YAAM;IACZM,SAAS,CAACY,QAAQ,CAAC,CAAD,CAAT,EAAcA,QAAQ,CAAC,CAAD,CAAtB,CAAT;EACH,CAFQ,EAEN,EAFM,CAAT;EAIAC,OAAO,CAACC,GAAR,CAAYJ,GAAZ;EAEA,OACI;IAAK,KAAK,EAAE;MAACK,QAAQ,EAAE,QAAX;MAAqBC,eAAe,EAAE,SAAtC;MAAiDC,KAAK,EAAE,MAAxD;MAAgEC,MAAM,EAAE,MAAxE;MAAgFC,OAAO,EAAE,MAAzF;MAAiGC,cAAc,EAAE,QAAjH;MAA2HC,YAAY,EAAE,QAAzI;MAAmJC,UAAU,EAAE;IAA/J,CAAZ;IAAA,UACI;MAAK,KAAK,EAAE;QAACC,UAAU,EAAI3B,OAAJ,OAAX;QAA2B4B,SAAS,EAAI1B,OAAJ,OAApC;QAAoDqB,OAAO,EAAE,MAA7D;QAAqEM,mBAAmB,cAAYhB,OAAZ,aAAxF;QAAuHiB,gBAAgB,cAAYjB,OAAZ;MAAvI,CAAZ;MAAA,UACKC,GAAG,CAACA,GAAJ,CAAQ,UAACiB,GAAD,EAAMC,GAAN,EAAc;QACnB,OAAOD,GAAG,CAACjB,GAAJ,CAAQ,UAACmB,MAAD,EAASC,IAAT,EAAkB;UAC7B,IAAIpB,GAAG,CAACkB,GAAD,CAAH,CAASE,IAAT,MAAmB,EAAvB,EAA2B;YACvB,OAAO,KAAC,IAAD;cAA+B,GAAG,EAAEpB,GAAG,CAACkB,GAAD,CAAH,CAASE,IAAT,EAAeC,GAAnD;cAAwD,IAAI,EAAErB,GAAG,CAACkB,GAAD,CAAH,CAASE,IAAT,EAAeE,GAA7E;cAAkF,GAAG,EAAEJ,GAAvF;cAA4F,GAAG,EAAEE,IAAjG;cAAuG,YAAY,EAAE7B,YAArH;cAAmI,WAAW,EAAEG,WAAhJ;cAA6J,YAAY,EAAED;YAA3K,GAAcyB,GAAd,WAAuBE,IAAvB,CAAP;UACH,CAFD,MAEO;YACH,OAAO,KAAC,IAAD;cAA+B,SAAS,EAAE9B,SAA1C;cAAqD,GAAG,EAAE4B,GAA1D;cAA+D,GAAG,EAAEE,IAApE;cAA0E,YAAY,EAAE7B,YAAxF;cAAsG,WAAW,EAAEG;YAAnH,GAAcwB,GAAd,WAAuBE,IAAvB,CAAP;UACH;QACJ,CANM,CAAP;MAOH,CARA;IADL;EADJ,EADJ;AAiBH"},"metadata":{},"sourceType":"module"}