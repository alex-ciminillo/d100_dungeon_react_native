{"ast":null,"code":"\"use strict\";\n\nimport \"./../libs/three.min.js\";\nimport \"./../libs/cannon.min.js\";\nimport \"./../teal.js\";\nimport \"./dice\";\nexport function throw_d100(container) {\n  var box = new $t.dice.dice_box(canvas, {\n    w: 500,\n    h: 300\n  });\n  box.animate_selector = false;\n\n  function before_roll(vectors, notation, callback) {\n    callback();\n  }\n\n  function notation_getter_d100() {\n    console.log($t.dice.parse_notation('d100 + d10'));\n    return $t.dice.parse_notation('d100 + d10');\n  }\n\n  function after_roll(notation, result) {\n    if (params.chromakey || params.noresult) return;\n    var res = result.join(' ');\n\n    if (notation.constant) {\n      if (notation.constant > 0) res += ' +' + notation.constant;else res += ' -' + Math.abs(notation.constant);\n    }\n\n    if (result.length > 1) res += ' = ' + (result.reduce(function (s, a) {\n      return s + a;\n    }) + notation.constant);\n    label.innerHTML = res;\n  }\n}\nexport function dice_initialize(container) {\n  $t.remove($t.id('loading_text'));\n  var canvas = $t.id('canvas');\n  canvas.style.width = window.innerWidth - 1 + 'px';\n  canvas.style.height = window.innerHeight - 1 + 'px';\n  var label = $t.id('label');\n  var set = $t.id('set');\n  on_set_change();\n  $t.dice.use_true_random = false;\n\n  function on_set_change(ev) {\n    set.style.width = set.value.length + 3 + 'ex';\n  }\n\n  $t.bind(set, 'keyup', on_set_change);\n  $t.bind(set, 'mousedown', function (ev) {\n    ev.stopPropagation();\n  });\n  $t.bind(set, 'mouseup', function (ev) {\n    ev.stopPropagation();\n  });\n  $t.bind(set, 'focus', function (ev) {\n    $t.set(container, {\n      class: ''\n    });\n  });\n  $t.bind(set, 'blur', function (ev) {\n    $t.set(container, {\n      class: 'noselect'\n    });\n  });\n  $t.bind($t.id('clear'), ['mouseup', 'touchend'], function (ev) {\n    ev.stopPropagation();\n    set.value = '0';\n    on_set_change();\n  });\n  var params = $t.get_url_params();\n\n  if (params.chromakey) {\n    $t.dice.desk_color = 0x00FFFFFF;\n    $t.id('control_panel').style.display = 'none';\n  }\n\n  if (params.shadows == 0) {\n    $t.dice.use_shadows = false;\n  }\n\n  if (params.color == 'white') {\n    $t.dice.dice_color = '#00FFFFFF';\n    $t.dice.label_color = '#00FFFFFF';\n  }\n\n  var box = new $t.dice.dice_box(canvas, {\n    w: 500,\n    h: 300\n  });\n  box.animate_selector = false;\n  $t.bind(window, 'resize', function () {\n    canvas.style.width = window.innerWidth - 1 + 'px';\n    canvas.style.height = window.innerHeight - 1 + 'px';\n    box.reinit(canvas, {\n      w: 500,\n      h: 300\n    });\n  });\n\n  function show_selector() {}\n\n  function before_roll(vectors, notation, callback) {\n    callback();\n  }\n\n  function notation_getter() {\n    console.log($t.dice.parse_notation(set.value));\n    return $t.dice.parse_notation(set.value);\n  }\n\n  function notation_getter_d100() {\n    console.log($t.dice.parse_notation('d100 + d10'));\n    return $t.dice.parse_notation('d100 + d10');\n  }\n\n  function after_roll(notation, result) {\n    if (params.chromakey || params.noresult) return;\n    var res = result.join(' ');\n\n    if (notation.constant) {\n      if (notation.constant > 0) res += ' +' + notation.constant;else res += ' -' + Math.abs(notation.constant);\n    }\n\n    if (result.length > 1) res += ' = ' + (result.reduce(function (s, a) {\n      return s + a;\n    }) + notation.constant);\n    label.innerHTML = res;\n  }\n\n  box.bind_mouse(container, notation_getter, before_roll, after_roll);\n  box.bind_throw($t.id('throw'), notation_getter, before_roll, after_roll);\n  box.bind_throw($t.id('On'), notation_getter_d100, before_roll, after_roll);\n  $t.bind(container, ['mouseup', 'touchend'], function (ev) {\n    ev.stopPropagation();\n    var name = box.search_dice_by_mouse(ev);\n\n    if (name != undefined) {\n      var notation = $t.dice.parse_notation(set.value);\n      notation.set.push(name);\n      set.value = $t.dice.stringify_notation(notation);\n      on_set_change();\n    }\n  });\n\n  if (params.notation) {\n    set.value = params.notation;\n  }\n\n  if (params.roll) {\n    $t.raise_event($t.id('throw'), 'mouseup');\n  } else {\n    show_selector();\n  }\n}","map":{"version":3,"names":["throw_d100","container","box","$t","dice","dice_box","canvas","w","h","animate_selector","before_roll","vectors","notation","callback","notation_getter_d100","console","log","parse_notation","after_roll","result","params","chromakey","noresult","res","join","constant","Math","abs","length","reduce","s","a","label","innerHTML","dice_initialize","remove","id","style","width","window","innerWidth","height","innerHeight","set","on_set_change","use_true_random","ev","value","bind","stopPropagation","class","get_url_params","desk_color","display","shadows","use_shadows","color","dice_color","label_color","reinit","show_selector","notation_getter","bind_mouse","bind_throw","name","search_dice_by_mouse","undefined","push","stringify_notation","roll","raise_event"],"sources":["/home/alex/react-dice/dice/main.js"],"sourcesContent":["\r\n\r\n\"use strict\";\r\nimport './../libs/three.min.js'\r\nimport './../libs/cannon.min.js'\r\nimport './../teal.js'\r\nimport './dice'\r\n\r\n\r\nexport function throw_d100(container) {\r\n    var box = new $t.dice.dice_box(canvas, { w: 500, h: 300 });\r\n    box.animate_selector = false;\r\n\r\n\r\n    function before_roll(vectors, notation, callback) {\r\n        // removes throw button and clear button and input box\r\n        // info_div.style.display = 'none';\r\n        // selector_div.style.display = 'none';\r\n        // do here rpc call or whatever to get your own result of throw.\r\n        // then callback with array of your result, example:\r\n        // callback([2, 2, 2, 2]); // for 4d6 where all dice values are 2.\r\n        callback();\r\n    }\r\n\r\n    function notation_getter_d100() {\r\n        console.log($t.dice.parse_notation('d100 + d10'))\r\n        return $t.dice.parse_notation('d100 + d10');\r\n    }\r\n\r\n    function after_roll(notation, result) {\r\n        if (params.chromakey || params.noresult) return;\r\n        var res = result.join(' ');\r\n        if (notation.constant) {\r\n            if (notation.constant > 0) res += ' +' + notation.constant;\r\n            else res += ' -' + Math.abs(notation.constant);\r\n        }\r\n        if (result.length > 1) res += ' = ' + \r\n                (result.reduce(function(s, a) { return s + a; }) + notation.constant);\r\n        label.innerHTML = res;\r\n        // info_div.style.display = 'inline-block';\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport function dice_initialize(container) {\r\n    $t.remove($t.id('loading_text'));\r\n\r\n    var canvas = $t.id('canvas');\r\n    canvas.style.width = window.innerWidth - 1 + 'px';\r\n    canvas.style.height = window.innerHeight - 1 + 'px';\r\n    var label = $t.id('label');\r\n    var set = $t.id('set');\r\n    // var selector_div = $t.id('selector_div');\r\n    // var info_div = $t.id('info_div');\r\n    on_set_change();\r\n\r\n    $t.dice.use_true_random = false;\r\n\r\n    function on_set_change(ev) { set.style.width = set.value.length + 3 + 'ex'; }\r\n    $t.bind(set, 'keyup', on_set_change);\r\n    $t.bind(set, 'mousedown', function(ev) { ev.stopPropagation(); });\r\n    $t.bind(set, 'mouseup', function(ev) { ev.stopPropagation(); });\r\n    $t.bind(set, 'focus', function(ev) { $t.set(container, { class: '' }); });\r\n    $t.bind(set, 'blur', function(ev) { $t.set(container, { class: 'noselect' }); });\r\n\r\n    $t.bind($t.id('clear'), ['mouseup', 'touchend'], function(ev) {\r\n        ev.stopPropagation();\r\n        set.value = '0';\r\n        on_set_change();\r\n    });\r\n\r\n    var params = $t.get_url_params();\r\n\r\n    if (params.chromakey) {\r\n        $t.dice.desk_color = 0x00FFFFFF;\r\n        // info_div.style.display = 'none';\r\n        $t.id('control_panel').style.display = 'none';\r\n    }\r\n    if (params.shadows == 0) {\r\n        $t.dice.use_shadows = false;\r\n    }\r\n    if (params.color == 'white') {\r\n        $t.dice.dice_color = '#00FFFFFF';\r\n        $t.dice.label_color = '#00FFFFFF';\r\n    }\r\n\r\n    var box = new $t.dice.dice_box(canvas, { w: 500, h: 300 });\r\n    box.animate_selector = false;\r\n\r\n    $t.bind(window, 'resize', function() {\r\n        canvas.style.width = window.innerWidth - 1 + 'px';\r\n        canvas.style.height = window.innerHeight - 1 + 'px';\r\n        box.reinit(canvas, { w: 500, h: 300 });\r\n    });\r\n\r\n    function show_selector() {\r\n        // info_div.style.display = 'none';\r\n        // selector_div.style.display = 'inline-block';\r\n        // box.draw_selector();\r\n    }\r\n\r\n    function before_roll(vectors, notation, callback) {\r\n        // removes throw button and clear button and input box\r\n        // info_div.style.display = 'none';\r\n        // selector_div.style.display = 'none';\r\n        // do here rpc call or whatever to get your own result of throw.\r\n        // then callback with array of your result, example:\r\n        // callback([2, 2, 2, 2]); // for 4d6 where all dice values are 2.\r\n        callback();\r\n    }\r\n\r\n    function notation_getter() {\r\n        console.log($t.dice.parse_notation(set.value))\r\n        return $t.dice.parse_notation(set.value);\r\n    }\r\n\r\n    function notation_getter_d100() {\r\n        console.log($t.dice.parse_notation('d100 + d10'))\r\n        return $t.dice.parse_notation('d100 + d10');\r\n    }\r\n\r\n    function after_roll(notation, result) {\r\n        if (params.chromakey || params.noresult) return;\r\n        var res = result.join(' ');\r\n        if (notation.constant) {\r\n            if (notation.constant > 0) res += ' +' + notation.constant;\r\n            else res += ' -' + Math.abs(notation.constant);\r\n        }\r\n        if (result.length > 1) res += ' = ' + \r\n                (result.reduce(function(s, a) { return s + a; }) + notation.constant);\r\n        label.innerHTML = res;\r\n        // info_div.style.display = 'inline-block';\r\n    }\r\n\r\n    box.bind_mouse(container, notation_getter, before_roll, after_roll);\r\n    box.bind_throw($t.id('throw'), notation_getter, before_roll, after_roll);\r\n\r\n    box.bind_throw($t.id('On'), notation_getter_d100, before_roll, after_roll);\r\n\r\n\r\n    $t.bind(container, ['mouseup', 'touchend'], function(ev) {\r\n        ev.stopPropagation();\r\n        // if (selector_div.style.display == 'none') {\r\n        //     if (!box.rolling) show_selector();\r\n        //     box.rolling = false;\r\n        //     return;\r\n        // }\r\n        var name = box.search_dice_by_mouse(ev);\r\n        if (name != undefined) {\r\n            var notation = $t.dice.parse_notation(set.value);\r\n            notation.set.push(name);\r\n            set.value = $t.dice.stringify_notation(notation);\r\n            on_set_change();\r\n        }\r\n    });\r\n\r\n    if (params.notation) {\r\n        set.value = params.notation;\r\n    }\r\n    if (params.roll) {\r\n        $t.raise_event($t.id('throw'), 'mouseup');\r\n    }\r\n    else {\r\n        show_selector();\r\n    }\r\n}\r\n"],"mappings":"AAEA;;AACA;AACA;AACA;AACA;AAGA,OAAO,SAASA,UAAT,CAAoBC,SAApB,EAA+B;EAClC,IAAIC,GAAG,GAAG,IAAIC,EAAE,CAACC,IAAH,CAAQC,QAAZ,CAAqBC,MAArB,EAA6B;IAAEC,CAAC,EAAE,GAAL;IAAUC,CAAC,EAAE;EAAb,CAA7B,CAAV;EACAN,GAAG,CAACO,gBAAJ,GAAuB,KAAvB;;EAGA,SAASC,WAAT,CAAqBC,OAArB,EAA8BC,QAA9B,EAAwCC,QAAxC,EAAkD;IAO9CA,QAAQ;EACX;;EAED,SAASC,oBAAT,GAAgC;IAC5BC,OAAO,CAACC,GAAR,CAAYb,EAAE,CAACC,IAAH,CAAQa,cAAR,CAAuB,YAAvB,CAAZ;IACA,OAAOd,EAAE,CAACC,IAAH,CAAQa,cAAR,CAAuB,YAAvB,CAAP;EACH;;EAED,SAASC,UAAT,CAAoBN,QAApB,EAA8BO,MAA9B,EAAsC;IAClC,IAAIC,MAAM,CAACC,SAAP,IAAoBD,MAAM,CAACE,QAA/B,EAAyC;IACzC,IAAIC,GAAG,GAAGJ,MAAM,CAACK,IAAP,CAAY,GAAZ,CAAV;;IACA,IAAIZ,QAAQ,CAACa,QAAb,EAAuB;MACnB,IAAIb,QAAQ,CAACa,QAAT,GAAoB,CAAxB,EAA2BF,GAAG,IAAI,OAAOX,QAAQ,CAACa,QAAvB,CAA3B,KACKF,GAAG,IAAI,OAAOG,IAAI,CAACC,GAAL,CAASf,QAAQ,CAACa,QAAlB,CAAd;IACR;;IACD,IAAIN,MAAM,CAACS,MAAP,GAAgB,CAApB,EAAuBL,GAAG,IAAI,SACrBJ,MAAM,CAACU,MAAP,CAAc,UAASC,CAAT,EAAYC,CAAZ,EAAe;MAAE,OAAOD,CAAC,GAAGC,CAAX;IAAe,CAA9C,IAAkDnB,QAAQ,CAACa,QADtC,CAAP;IAEvBO,KAAK,CAACC,SAAN,GAAkBV,GAAlB;EAEH;AAIJ;AAED,OAAO,SAASW,eAAT,CAAyBjC,SAAzB,EAAoC;EACvCE,EAAE,CAACgC,MAAH,CAAUhC,EAAE,CAACiC,EAAH,CAAM,cAAN,CAAV;EAEA,IAAI9B,MAAM,GAAGH,EAAE,CAACiC,EAAH,CAAM,QAAN,CAAb;EACA9B,MAAM,CAAC+B,KAAP,CAAaC,KAAb,GAAqBC,MAAM,CAACC,UAAP,GAAoB,CAApB,GAAwB,IAA7C;EACAlC,MAAM,CAAC+B,KAAP,CAAaI,MAAb,GAAsBF,MAAM,CAACG,WAAP,GAAqB,CAArB,GAAyB,IAA/C;EACA,IAAIV,KAAK,GAAG7B,EAAE,CAACiC,EAAH,CAAM,OAAN,CAAZ;EACA,IAAIO,GAAG,GAAGxC,EAAE,CAACiC,EAAH,CAAM,KAAN,CAAV;EAGAQ,aAAa;EAEbzC,EAAE,CAACC,IAAH,CAAQyC,eAAR,GAA0B,KAA1B;;EAEA,SAASD,aAAT,CAAuBE,EAAvB,EAA2B;IAAEH,GAAG,CAACN,KAAJ,CAAUC,KAAV,GAAkBK,GAAG,CAACI,KAAJ,CAAUnB,MAAV,GAAmB,CAAnB,GAAuB,IAAzC;EAAgD;;EAC7EzB,EAAE,CAAC6C,IAAH,CAAQL,GAAR,EAAa,OAAb,EAAsBC,aAAtB;EACAzC,EAAE,CAAC6C,IAAH,CAAQL,GAAR,EAAa,WAAb,EAA0B,UAASG,EAAT,EAAa;IAAEA,EAAE,CAACG,eAAH;EAAuB,CAAhE;EACA9C,EAAE,CAAC6C,IAAH,CAAQL,GAAR,EAAa,SAAb,EAAwB,UAASG,EAAT,EAAa;IAAEA,EAAE,CAACG,eAAH;EAAuB,CAA9D;EACA9C,EAAE,CAAC6C,IAAH,CAAQL,GAAR,EAAa,OAAb,EAAsB,UAASG,EAAT,EAAa;IAAE3C,EAAE,CAACwC,GAAH,CAAO1C,SAAP,EAAkB;MAAEiD,KAAK,EAAE;IAAT,CAAlB;EAAmC,CAAxE;EACA/C,EAAE,CAAC6C,IAAH,CAAQL,GAAR,EAAa,MAAb,EAAqB,UAASG,EAAT,EAAa;IAAE3C,EAAE,CAACwC,GAAH,CAAO1C,SAAP,EAAkB;MAAEiD,KAAK,EAAE;IAAT,CAAlB;EAA2C,CAA/E;EAEA/C,EAAE,CAAC6C,IAAH,CAAQ7C,EAAE,CAACiC,EAAH,CAAM,OAAN,CAAR,EAAwB,CAAC,SAAD,EAAY,UAAZ,CAAxB,EAAiD,UAASU,EAAT,EAAa;IAC1DA,EAAE,CAACG,eAAH;IACAN,GAAG,CAACI,KAAJ,GAAY,GAAZ;IACAH,aAAa;EAChB,CAJD;EAMA,IAAIxB,MAAM,GAAGjB,EAAE,CAACgD,cAAH,EAAb;;EAEA,IAAI/B,MAAM,CAACC,SAAX,EAAsB;IAClBlB,EAAE,CAACC,IAAH,CAAQgD,UAAR,GAAqB,UAArB;IAEAjD,EAAE,CAACiC,EAAH,CAAM,eAAN,EAAuBC,KAAvB,CAA6BgB,OAA7B,GAAuC,MAAvC;EACH;;EACD,IAAIjC,MAAM,CAACkC,OAAP,IAAkB,CAAtB,EAAyB;IACrBnD,EAAE,CAACC,IAAH,CAAQmD,WAAR,GAAsB,KAAtB;EACH;;EACD,IAAInC,MAAM,CAACoC,KAAP,IAAgB,OAApB,EAA6B;IACzBrD,EAAE,CAACC,IAAH,CAAQqD,UAAR,GAAqB,WAArB;IACAtD,EAAE,CAACC,IAAH,CAAQsD,WAAR,GAAsB,WAAtB;EACH;;EAED,IAAIxD,GAAG,GAAG,IAAIC,EAAE,CAACC,IAAH,CAAQC,QAAZ,CAAqBC,MAArB,EAA6B;IAAEC,CAAC,EAAE,GAAL;IAAUC,CAAC,EAAE;EAAb,CAA7B,CAAV;EACAN,GAAG,CAACO,gBAAJ,GAAuB,KAAvB;EAEAN,EAAE,CAAC6C,IAAH,CAAQT,MAAR,EAAgB,QAAhB,EAA0B,YAAW;IACjCjC,MAAM,CAAC+B,KAAP,CAAaC,KAAb,GAAqBC,MAAM,CAACC,UAAP,GAAoB,CAApB,GAAwB,IAA7C;IACAlC,MAAM,CAAC+B,KAAP,CAAaI,MAAb,GAAsBF,MAAM,CAACG,WAAP,GAAqB,CAArB,GAAyB,IAA/C;IACAxC,GAAG,CAACyD,MAAJ,CAAWrD,MAAX,EAAmB;MAAEC,CAAC,EAAE,GAAL;MAAUC,CAAC,EAAE;IAAb,CAAnB;EACH,CAJD;;EAMA,SAASoD,aAAT,GAAyB,CAIxB;;EAED,SAASlD,WAAT,CAAqBC,OAArB,EAA8BC,QAA9B,EAAwCC,QAAxC,EAAkD;IAO9CA,QAAQ;EACX;;EAED,SAASgD,eAAT,GAA2B;IACvB9C,OAAO,CAACC,GAAR,CAAYb,EAAE,CAACC,IAAH,CAAQa,cAAR,CAAuB0B,GAAG,CAACI,KAA3B,CAAZ;IACA,OAAO5C,EAAE,CAACC,IAAH,CAAQa,cAAR,CAAuB0B,GAAG,CAACI,KAA3B,CAAP;EACH;;EAED,SAASjC,oBAAT,GAAgC;IAC5BC,OAAO,CAACC,GAAR,CAAYb,EAAE,CAACC,IAAH,CAAQa,cAAR,CAAuB,YAAvB,CAAZ;IACA,OAAOd,EAAE,CAACC,IAAH,CAAQa,cAAR,CAAuB,YAAvB,CAAP;EACH;;EAED,SAASC,UAAT,CAAoBN,QAApB,EAA8BO,MAA9B,EAAsC;IAClC,IAAIC,MAAM,CAACC,SAAP,IAAoBD,MAAM,CAACE,QAA/B,EAAyC;IACzC,IAAIC,GAAG,GAAGJ,MAAM,CAACK,IAAP,CAAY,GAAZ,CAAV;;IACA,IAAIZ,QAAQ,CAACa,QAAb,EAAuB;MACnB,IAAIb,QAAQ,CAACa,QAAT,GAAoB,CAAxB,EAA2BF,GAAG,IAAI,OAAOX,QAAQ,CAACa,QAAvB,CAA3B,KACKF,GAAG,IAAI,OAAOG,IAAI,CAACC,GAAL,CAASf,QAAQ,CAACa,QAAlB,CAAd;IACR;;IACD,IAAIN,MAAM,CAACS,MAAP,GAAgB,CAApB,EAAuBL,GAAG,IAAI,SACrBJ,MAAM,CAACU,MAAP,CAAc,UAASC,CAAT,EAAYC,CAAZ,EAAe;MAAE,OAAOD,CAAC,GAAGC,CAAX;IAAe,CAA9C,IAAkDnB,QAAQ,CAACa,QADtC,CAAP;IAEvBO,KAAK,CAACC,SAAN,GAAkBV,GAAlB;EAEH;;EAEDrB,GAAG,CAAC4D,UAAJ,CAAe7D,SAAf,EAA0B4D,eAA1B,EAA2CnD,WAA3C,EAAwDQ,UAAxD;EACAhB,GAAG,CAAC6D,UAAJ,CAAe5D,EAAE,CAACiC,EAAH,CAAM,OAAN,CAAf,EAA+ByB,eAA/B,EAAgDnD,WAAhD,EAA6DQ,UAA7D;EAEAhB,GAAG,CAAC6D,UAAJ,CAAe5D,EAAE,CAACiC,EAAH,CAAM,IAAN,CAAf,EAA4BtB,oBAA5B,EAAkDJ,WAAlD,EAA+DQ,UAA/D;EAGAf,EAAE,CAAC6C,IAAH,CAAQ/C,SAAR,EAAmB,CAAC,SAAD,EAAY,UAAZ,CAAnB,EAA4C,UAAS6C,EAAT,EAAa;IACrDA,EAAE,CAACG,eAAH;IAMA,IAAIe,IAAI,GAAG9D,GAAG,CAAC+D,oBAAJ,CAAyBnB,EAAzB,CAAX;;IACA,IAAIkB,IAAI,IAAIE,SAAZ,EAAuB;MACnB,IAAItD,QAAQ,GAAGT,EAAE,CAACC,IAAH,CAAQa,cAAR,CAAuB0B,GAAG,CAACI,KAA3B,CAAf;MACAnC,QAAQ,CAAC+B,GAAT,CAAawB,IAAb,CAAkBH,IAAlB;MACArB,GAAG,CAACI,KAAJ,GAAY5C,EAAE,CAACC,IAAH,CAAQgE,kBAAR,CAA2BxD,QAA3B,CAAZ;MACAgC,aAAa;IAChB;EACJ,CAdD;;EAgBA,IAAIxB,MAAM,CAACR,QAAX,EAAqB;IACjB+B,GAAG,CAACI,KAAJ,GAAY3B,MAAM,CAACR,QAAnB;EACH;;EACD,IAAIQ,MAAM,CAACiD,IAAX,EAAiB;IACblE,EAAE,CAACmE,WAAH,CAAenE,EAAE,CAACiC,EAAH,CAAM,OAAN,CAAf,EAA+B,SAA/B;EACH,CAFD,MAGK;IACDwB,aAAa;EAChB;AACJ"},"metadata":{},"sourceType":"module"}