{"ast":null,"code":"import * as THREE from \"./../libs/three.min.js\";\nimport * as CANNON from \"./../libs/cannon.min.js\";\nimport \"./../teal.js\";\n\"use strict\";\n\n(function (dice) {\n  var random_storage = [];\n  this.use_true_random = true;\n  this.frame_rate = 1 / 60;\n\n  function prepare_rnd(callback) {\n    if (!random_storage.length && $t.dice.use_true_random) {\n      try {\n        $t.rpc({\n          method: \"random\",\n          n: 512\n        }, function (random_responce) {\n          if (!random_responce.error) random_storage = random_responce.result.random.data;else $t.dice.use_true_random = false;\n          callback();\n        });\n        return;\n      } catch (e) {\n        $t.dice.use_true_random = false;\n      }\n    }\n\n    callback();\n  }\n\n  function rnd() {\n    return random_storage.length ? random_storage.pop() : Math.random();\n  }\n\n  function create_shape(vertices, faces, radius) {\n    var cv = new Array(vertices.length),\n        cf = new Array(faces.length);\n\n    for (var i = 0; i < vertices.length; ++i) {\n      var v = vertices[i];\n      cv[i] = new CANNON.Vec3(v.x * radius, v.y * radius, v.z * radius);\n    }\n\n    for (var i = 0; i < faces.length; ++i) {\n      cf[i] = faces[i].slice(0, faces[i].length - 1);\n    }\n\n    return new CANNON.ConvexPolyhedron(cv, cf);\n  }\n\n  function make_geom(vertices, faces, radius, tab, af) {\n    var geom = new THREE.Geometry();\n\n    for (var i = 0; i < vertices.length; ++i) {\n      var vertex = vertices[i].multiplyScalar(radius);\n      vertex.index = geom.vertices.push(vertex) - 1;\n    }\n\n    for (var i = 0; i < faces.length; ++i) {\n      var ii = faces[i],\n          fl = ii.length - 1;\n      var aa = Math.PI * 2 / fl;\n\n      for (var j = 0; j < fl - 2; ++j) {\n        geom.faces.push(new THREE.Face3(ii[0], ii[j + 1], ii[j + 2], [geom.vertices[ii[0]], geom.vertices[ii[j + 1]], geom.vertices[ii[j + 2]]], 0, ii[fl] + 1));\n        geom.faceVertexUvs[0].push([new THREE.Vector2((Math.cos(af) + 1 + tab) / 2 / (1 + tab), (Math.sin(af) + 1 + tab) / 2 / (1 + tab)), new THREE.Vector2((Math.cos(aa * (j + 1) + af) + 1 + tab) / 2 / (1 + tab), (Math.sin(aa * (j + 1) + af) + 1 + tab) / 2 / (1 + tab)), new THREE.Vector2((Math.cos(aa * (j + 2) + af) + 1 + tab) / 2 / (1 + tab), (Math.sin(aa * (j + 2) + af) + 1 + tab) / 2 / (1 + tab))]);\n      }\n    }\n\n    geom.computeFaceNormals();\n    geom.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n    return geom;\n  }\n\n  function chamfer_geom(vectors, faces, chamfer) {\n    var chamfer_vectors = [],\n        chamfer_faces = [],\n        corner_faces = new Array(vectors.length);\n\n    for (var i = 0; i < vectors.length; ++i) {\n      corner_faces[i] = [];\n    }\n\n    for (var i = 0; i < faces.length; ++i) {\n      var ii = faces[i],\n          fl = ii.length - 1;\n      var center_point = new THREE.Vector3();\n      var face = new Array(fl);\n\n      for (var j = 0; j < fl; ++j) {\n        var vv = vectors[ii[j]].clone();\n        center_point.add(vv);\n        corner_faces[ii[j]].push(face[j] = chamfer_vectors.push(vv) - 1);\n      }\n\n      center_point.divideScalar(fl);\n\n      for (var j = 0; j < fl; ++j) {\n        var vv = chamfer_vectors[face[j]];\n        vv.subVectors(vv, center_point).multiplyScalar(chamfer).addVectors(vv, center_point);\n      }\n\n      face.push(ii[fl]);\n      chamfer_faces.push(face);\n    }\n\n    for (var i = 0; i < faces.length - 1; ++i) {\n      for (var j = i + 1; j < faces.length; ++j) {\n        var pairs = [],\n            lastm = -1;\n\n        for (var m = 0; m < faces[i].length - 1; ++m) {\n          var n = faces[j].indexOf(faces[i][m]);\n\n          if (n >= 0 && n < faces[j].length - 1) {\n            if (lastm >= 0 && m != lastm + 1) pairs.unshift([i, m], [j, n]);else pairs.push([i, m], [j, n]);\n            lastm = m;\n          }\n        }\n\n        if (pairs.length != 4) continue;\n        chamfer_faces.push([chamfer_faces[pairs[0][0]][pairs[0][1]], chamfer_faces[pairs[1][0]][pairs[1][1]], chamfer_faces[pairs[3][0]][pairs[3][1]], chamfer_faces[pairs[2][0]][pairs[2][1]], -1]);\n      }\n    }\n\n    for (var i = 0; i < corner_faces.length; ++i) {\n      var cf = corner_faces[i],\n          face = [cf[0]],\n          count = cf.length - 1;\n\n      while (count) {\n        for (var m = faces.length; m < chamfer_faces.length; ++m) {\n          var index = chamfer_faces[m].indexOf(face[face.length - 1]);\n\n          if (index >= 0 && index < 4) {\n            if (--index == -1) index = 3;\n            var next_vertex = chamfer_faces[m][index];\n\n            if (cf.indexOf(next_vertex) >= 0) {\n              face.push(next_vertex);\n              break;\n            }\n          }\n        }\n\n        --count;\n      }\n\n      face.push(-1);\n      chamfer_faces.push(face);\n    }\n\n    return {\n      vectors: chamfer_vectors,\n      faces: chamfer_faces\n    };\n  }\n\n  function create_geom(vertices, faces, radius, tab, af, chamfer) {\n    var vectors = new Array(vertices.length);\n\n    for (var i = 0; i < vertices.length; ++i) {\n      vectors[i] = new THREE.Vector3().fromArray(vertices[i]).normalize();\n    }\n\n    var cg = chamfer_geom(vectors, faces, chamfer);\n    var geom = make_geom(cg.vectors, cg.faces, radius, tab, af);\n    geom.cannon_shape = create_shape(vectors, faces, radius);\n    return geom;\n  }\n\n  this.standart_d20_dice_face_labels = [' ', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20'];\n  this.standart_d100_dice_face_labels = [' ', '00', '10', '20', '30', '40', '50', '60', '70', '80', '90'];\n\n  function calc_texture_size(approx) {\n    return Math.pow(2, Math.floor(Math.log(approx) / Math.log(2)));\n  }\n\n  this.create_dice_materials = function (face_labels, size, margin) {\n    function create_text_texture(text, color, back_color) {\n      if (text == undefined) return null;\n      var canvas = document.createElement(\"canvas\");\n      var context = canvas.getContext(\"2d\");\n      var ts = calc_texture_size(size + size * 2 * margin) * 2;\n      canvas.width = canvas.height = ts;\n      context.font = ts / (1 + 2 * margin) + \"pt Arial\";\n      context.fillStyle = back_color;\n      context.fillRect(0, 0, canvas.width, canvas.height);\n      context.textAlign = \"center\";\n      context.textBaseline = \"middle\";\n      context.fillStyle = color;\n      context.fillText(text, canvas.width / 2, canvas.height / 2);\n\n      if (text == '6' || text == '9') {\n        context.fillText('  .', canvas.width / 2, canvas.height / 2);\n      }\n\n      var texture = new THREE.Texture(canvas);\n      texture.needsUpdate = true;\n      return texture;\n    }\n\n    var materials = [];\n\n    for (var i = 0; i < face_labels.length; ++i) {\n      materials.push(new THREE.MeshPhongMaterial($t.copyto(this.material_options, {\n        map: create_text_texture(face_labels[i], this.label_color, this.dice_color)\n      })));\n    }\n\n    return materials;\n  };\n\n  var d4_labels = [[[], [0, 0, 0], [2, 4, 3], [1, 3, 4], [2, 1, 4], [1, 2, 3]], [[], [0, 0, 0], [2, 3, 4], [3, 1, 4], [2, 4, 1], [3, 2, 1]], [[], [0, 0, 0], [4, 3, 2], [3, 4, 1], [4, 2, 1], [3, 1, 2]], [[], [0, 0, 0], [4, 2, 3], [1, 4, 3], [4, 1, 2], [1, 3, 2]]];\n\n  this.create_d4_materials = function (size, margin, labels) {\n    function create_d4_text(text, color, back_color) {\n      var canvas = document.createElement(\"canvas\");\n      var context = canvas.getContext(\"2d\");\n      var ts = calc_texture_size(size + margin) * 2;\n      canvas.width = canvas.height = ts;\n      context.font = (ts - margin) / 1.5 + \"pt Arial\";\n      context.fillStyle = back_color;\n      context.fillRect(0, 0, canvas.width, canvas.height);\n      context.textAlign = \"center\";\n      context.textBaseline = \"middle\";\n      context.fillStyle = color;\n\n      for (var i in text) {\n        context.fillText(text[i], canvas.width / 2, canvas.height / 2 - ts * 0.3);\n        context.translate(canvas.width / 2, canvas.height / 2);\n        context.rotate(Math.PI * 2 / 3);\n        context.translate(-canvas.width / 2, -canvas.height / 2);\n      }\n\n      var texture = new THREE.Texture(canvas);\n      texture.needsUpdate = true;\n      return texture;\n    }\n\n    var materials = [];\n\n    for (var i = 0; i < labels.length; ++i) {\n      materials.push(new THREE.MeshPhongMaterial($t.copyto(this.material_options, {\n        map: create_d4_text(labels[i], this.label_color, this.dice_color)\n      })));\n    }\n\n    return materials;\n  };\n\n  this.create_d4_geometry = function (radius) {\n    var vertices = [[1, 1, 1], [-1, -1, 1], [-1, 1, -1], [1, -1, -1]];\n    var faces = [[1, 0, 2, 1], [0, 1, 3, 2], [0, 3, 2, 3], [1, 2, 3, 4]];\n    return create_geom(vertices, faces, radius, -0.1, Math.PI * 7 / 6, 0.96);\n  };\n\n  this.create_d6_geometry = function (radius) {\n    var vertices = [[-1, -1, -1], [1, -1, -1], [1, 1, -1], [-1, 1, -1], [-1, -1, 1], [1, -1, 1], [1, 1, 1], [-1, 1, 1]];\n    var faces = [[0, 3, 2, 1, 1], [1, 2, 6, 5, 2], [0, 1, 5, 4, 3], [3, 7, 6, 2, 4], [0, 4, 7, 3, 5], [4, 5, 6, 7, 6]];\n    return create_geom(vertices, faces, radius, 0.1, Math.PI / 4, 0.96);\n  };\n\n  this.create_d8_geometry = function (radius) {\n    var vertices = [[1, 0, 0], [-1, 0, 0], [0, 1, 0], [0, -1, 0], [0, 0, 1], [0, 0, -1]];\n    var faces = [[0, 2, 4, 1], [0, 4, 3, 2], [0, 3, 5, 3], [0, 5, 2, 4], [1, 3, 4, 5], [1, 4, 2, 6], [1, 2, 5, 7], [1, 5, 3, 8]];\n    return create_geom(vertices, faces, radius, 0, -Math.PI / 4 / 2, 0.965);\n  };\n\n  this.create_d10_geometry = function (radius) {\n    var a = Math.PI * 2 / 10,\n        k = Math.cos(a),\n        h = 0.105,\n        v = -1;\n    var vertices = [];\n\n    for (var i = 0, b = 0; i < 10; ++i, b += a) {\n      vertices.push([Math.cos(b), Math.sin(b), h * (i % 2 ? 1 : -1)]);\n    }\n\n    vertices.push([0, 0, -1]);\n    vertices.push([0, 0, 1]);\n    var faces = [[5, 7, 11, 0], [4, 2, 10, 1], [1, 3, 11, 2], [0, 8, 10, 3], [7, 9, 11, 4], [8, 6, 10, 5], [9, 1, 11, 6], [2, 0, 10, 7], [3, 5, 11, 8], [6, 4, 10, 9], [1, 0, 2, v], [1, 2, 3, v], [3, 2, 4, v], [3, 4, 5, v], [5, 4, 6, v], [5, 6, 7, v], [7, 6, 8, v], [7, 8, 9, v], [9, 8, 0, v], [9, 0, 1, v]];\n    return create_geom(vertices, faces, radius, 0, Math.PI * 6 / 5, 0.945);\n  };\n\n  this.create_d12_geometry = function (radius) {\n    var p = (1 + Math.sqrt(5)) / 2,\n        q = 1 / p;\n    var vertices = [[0, q, p], [0, q, -p], [0, -q, p], [0, -q, -p], [p, 0, q], [p, 0, -q], [-p, 0, q], [-p, 0, -q], [q, p, 0], [q, -p, 0], [-q, p, 0], [-q, -p, 0], [1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]];\n    var faces = [[2, 14, 4, 12, 0, 1], [15, 9, 11, 19, 3, 2], [16, 10, 17, 7, 6, 3], [6, 7, 19, 11, 18, 4], [6, 18, 2, 0, 16, 5], [18, 11, 9, 14, 2, 6], [1, 17, 10, 8, 13, 7], [1, 13, 5, 15, 3, 8], [13, 8, 12, 4, 5, 9], [5, 4, 14, 9, 15, 10], [0, 12, 8, 10, 16, 11], [3, 19, 7, 17, 1, 12]];\n    return create_geom(vertices, faces, radius, 0.2, -Math.PI / 4 / 2, 0.968);\n  };\n\n  this.create_d20_geometry = function (radius) {\n    var t = (1 + Math.sqrt(5)) / 2;\n    var vertices = [[-1, t, 0], [1, t, 0], [-1, -t, 0], [1, -t, 0], [0, -1, t], [0, 1, t], [0, -1, -t], [0, 1, -t], [t, 0, -1], [t, 0, 1], [-t, 0, -1], [-t, 0, 1]];\n    var faces = [[0, 11, 5, 1], [0, 5, 1, 2], [0, 1, 7, 3], [0, 7, 10, 4], [0, 10, 11, 5], [1, 5, 9, 6], [5, 11, 4, 7], [11, 10, 2, 8], [10, 7, 6, 9], [7, 1, 8, 10], [3, 9, 4, 11], [3, 4, 2, 12], [3, 2, 6, 13], [3, 6, 8, 14], [3, 8, 9, 15], [4, 9, 5, 16], [2, 4, 11, 17], [6, 2, 10, 18], [8, 6, 7, 19], [9, 8, 1, 20]];\n    return create_geom(vertices, faces, radius, -0.2, -Math.PI / 4 / 2, 0.955);\n  };\n\n  this.material_options = {\n    specular: 0x172022,\n    color: 0x00FFFFFF,\n    shininess: 20,\n    shading: THREE.FlatShading\n  };\n  this.label_color = '#aaaaaa';\n  this.dice_color = '#202020';\n  this.ambient_light_color = 0x00FFFFFF;\n  this.spot_light_color = 0x00FFFFFF;\n  this.selector_back_colors = {\n    color: 0x00FFFFFF,\n    shininess: 0,\n    emissive: 0x00FFFFFF\n  };\n  this.desk_color = 'rgba(255, 0, 0)';\n  this.use_shadows = true;\n  this.known_types = ['d4', 'd6', 'd8', 'd10', 'd12', 'd20', 'd100'];\n  this.dice_face_range = {\n    'd4': [1, 4],\n    'd6': [1, 6],\n    'd8': [1, 8],\n    'd10': [0, 9],\n    'd12': [1, 12],\n    'd20': [1, 20],\n    'd100': [0, 9]\n  };\n  this.dice_mass = {\n    'd4': 300,\n    'd6': 300,\n    'd8': 340,\n    'd10': 350,\n    'd12': 350,\n    'd20': 400,\n    'd100': 350\n  };\n  this.dice_inertia = {\n    'd4': 5,\n    'd6': 13,\n    'd8': 10,\n    'd10': 9,\n    'd12': 8,\n    'd20': 6,\n    'd100': 9\n  };\n  this.scale = 50;\n\n  this.create_d4 = function () {\n    if (!this.d4_geometry) this.d4_geometry = this.create_d4_geometry(this.scale * 1.2);\n    if (!this.d4_material) this.d4_material = new THREE.MeshFaceMaterial(this.create_d4_materials(this.scale / 2, this.scale * 2, d4_labels[0]));\n    return new THREE.Mesh(this.d4_geometry, this.d4_material);\n  };\n\n  this.create_d6 = function () {\n    if (!this.d6_geometry) this.d6_geometry = this.create_d6_geometry(this.scale * 0.9);\n    if (!this.dice_material) this.dice_material = new THREE.MeshFaceMaterial(this.create_dice_materials(this.standart_d20_dice_face_labels, this.scale / 2, 1.0));\n    return new THREE.Mesh(this.d6_geometry, this.dice_material);\n  };\n\n  this.create_d8 = function () {\n    if (!this.d8_geometry) this.d8_geometry = this.create_d8_geometry(this.scale);\n    if (!this.dice_material) this.dice_material = new THREE.MeshFaceMaterial(this.create_dice_materials(this.standart_d20_dice_face_labels, this.scale / 2, 1.2));\n    return new THREE.Mesh(this.d8_geometry, this.dice_material);\n  };\n\n  this.create_d10 = function () {\n    if (!this.d10_geometry) this.d10_geometry = this.create_d10_geometry(this.scale * 0.9);\n    if (!this.dice_material) this.dice_material = new THREE.MeshFaceMaterial(this.create_dice_materials(this.standart_d20_dice_face_labels, this.scale / 2, 1.0));\n    return new THREE.Mesh(this.d10_geometry, this.dice_material);\n  };\n\n  this.create_d12 = function () {\n    if (!this.d12_geometry) this.d12_geometry = this.create_d12_geometry(this.scale * 0.9);\n    if (!this.dice_material) this.dice_material = new THREE.MeshFaceMaterial(this.create_dice_materials(this.standart_d20_dice_face_labels, this.scale / 2, 1.0));\n    return new THREE.Mesh(this.d12_geometry, this.dice_material);\n  };\n\n  this.create_d20 = function () {\n    if (!this.d20_geometry) this.d20_geometry = this.create_d20_geometry(this.scale);\n    if (!this.dice_material) this.dice_material = new THREE.MeshFaceMaterial(this.create_dice_materials(this.standart_d20_dice_face_labels, this.scale / 2, 1.0));\n    return new THREE.Mesh(this.d20_geometry, this.dice_material);\n  };\n\n  this.create_d100 = function () {\n    if (!this.d10_geometry) this.d10_geometry = this.create_d10_geometry(this.scale * 0.9);\n    if (!this.d100_material) this.d100_material = new THREE.MeshFaceMaterial(this.create_dice_materials(this.standart_d100_dice_face_labels, this.scale / 2, 1.5));\n    return new THREE.Mesh(this.d10_geometry, this.d100_material);\n  };\n\n  this.parse_notation = function (notation) {\n    var no = notation.split('@');\n    var dr0 = /\\s*(\\d*)([a-z]+)(\\d+)(\\s*(\\+|\\-)\\s*(\\d+)){0,1}\\s*(\\+|$)/gi;\n    var dr1 = /(\\b)*(\\d+)(\\b)*/gi;\n    var ret = {\n      set: [],\n      constant: 0,\n      result: [],\n      error: false\n    },\n        res;\n\n    while (res = dr0.exec(no[0])) {\n      var command = res[2];\n\n      if (command != 'd') {\n        ret.error = true;\n        continue;\n      }\n\n      var count = parseInt(res[1]);\n      if (res[1] == '') count = 1;\n      var type = 'd' + res[3];\n\n      if (this.known_types.indexOf(type) == -1) {\n        ret.error = true;\n        continue;\n      }\n\n      while (count--) {\n        ret.set.push(type);\n      }\n\n      if (res[5] && res[6]) {\n        if (res[5] == '+') ret.constant += parseInt(res[6]);else ret.constant -= parseInt(res[6]);\n      }\n    }\n\n    while (res = dr1.exec(no[1])) {\n      ret.result.push(parseInt(res[2]));\n    }\n\n    return ret;\n  };\n\n  this.stringify_notation = function (nn) {\n    var dict = {},\n        notation = '';\n\n    for (var i in nn.set) {\n      if (!dict[nn.set[i]]) dict[nn.set[i]] = 1;else ++dict[nn.set[i]];\n    }\n\n    for (var i in dict) {\n      if (notation.length) notation += ' + ';\n      notation += (dict[i] > 1 ? dict[i] : '') + i;\n    }\n\n    if (nn.constant) {\n      if (nn.constant > 0) notation += ' + ' + nn.constant;else notation += ' - ' + Math.abs(nn.constant);\n    }\n\n    return notation;\n  };\n\n  var that = this;\n\n  this.dice_box = function (container, dimentions) {\n    this.use_adapvite_timestep = true;\n    this.animate_selector = true;\n    this.dices = [];\n    this.scene = new THREE.Scene();\n    this.world = new CANNON.World();\n    this.renderer = window.WebGLRenderingContext ? new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    }) : new THREE.CanvasRenderer({\n      antialias: true,\n      alpha: true\n    });\n    container.appendChild(this.renderer.domElement);\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.shadowMap.type = THREE.PCFShadowMap;\n    this.renderer.setClearColor(0x000000, 0);\n    this.reinit(container, dimentions);\n    this.world.gravity.set(0, 0, -9.8 * 800);\n    this.world.broadphase = new CANNON.NaiveBroadphase();\n    this.world.solver.iterations = 16;\n    var ambientLight = new THREE.AmbientLight(that.ambient_light_color);\n    this.scene.add(ambientLight);\n    this.dice_body_material = new CANNON.Material();\n    var desk_body_material = new CANNON.Material();\n    var barrier_body_material = new CANNON.Material();\n    this.world.addContactMaterial(new CANNON.ContactMaterial(desk_body_material, this.dice_body_material, 0.01, 0.5));\n    this.world.addContactMaterial(new CANNON.ContactMaterial(barrier_body_material, this.dice_body_material, 0, 1.0));\n    this.world.addContactMaterial(new CANNON.ContactMaterial(this.dice_body_material, this.dice_body_material, 0, 0.5));\n    this.world.add(new CANNON.RigidBody(0, new CANNON.Plane(), desk_body_material));\n    var barrier;\n    barrier = new CANNON.RigidBody(0, new CANNON.Plane(), barrier_body_material);\n    barrier.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), Math.PI / 2);\n    barrier.position.set(0, this.h * 1.43, 0);\n    this.world.add(barrier);\n    barrier = new CANNON.RigidBody(0, new CANNON.Plane(), barrier_body_material);\n    barrier.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2);\n    barrier.position.set(0, -this.h * 1.5, 0);\n    this.world.add(barrier);\n    barrier = new CANNON.RigidBody(0, new CANNON.Plane(), barrier_body_material);\n    barrier.quaternion.setFromAxisAngle(new CANNON.Vec3(0, 1, 0), -Math.PI / 2);\n    barrier.position.set(this.w * 0.93, 0, 0);\n    this.world.add(barrier);\n    barrier = new CANNON.RigidBody(0, new CANNON.Plane(), barrier_body_material);\n    barrier.quaternion.setFromAxisAngle(new CANNON.Vec3(0, 1, 0), Math.PI / 2);\n    barrier.position.set(-this.w * 0.93, 0, 0);\n    this.world.add(barrier);\n    this.last_time = 0;\n    this.running = false;\n    this.renderer.render(this.scene, this.camera);\n  };\n\n  this.dice_box.prototype.reinit = function (container, dimentions) {\n    this.cw = container.clientWidth / 2;\n    this.ch = container.clientHeight / 1.1;\n\n    if (dimentions) {\n      this.w = dimentions.w;\n      this.h = dimentions.h;\n    } else {\n      this.w = this.cw;\n      this.h = this.ch;\n    }\n\n    this.aspect = Math.min(this.cw / this.w, this.ch / this.h);\n    that.scale = Math.sqrt(this.w * this.w + this.h * this.h) / 8;\n    this.renderer.setSize(this.cw * 2, this.ch * 2);\n    this.wh = this.ch / this.aspect / Math.tan(10 * Math.PI / 180);\n    if (this.camera) this.scene.remove(this.camera);\n    this.camera = new THREE.PerspectiveCamera(20, this.cw / this.ch, 1, this.wh * 1.3);\n    this.camera.position.z = this.wh;\n    var mw = Math.max(this.w, this.h);\n    if (this.light) this.scene.remove(this.light);\n    this.light = new THREE.SpotLight(that.spot_light_color, 2.0);\n    this.light.position.set(-mw / 2, mw / 2, mw * 2);\n    this.light.target.position.set(0, 0, 0);\n    this.light.distance = mw * 5;\n    this.light.castShadow = true;\n    this.light.shadowCameraNear = mw / 10;\n    this.light.shadowCameraFar = mw * 5;\n    this.light.shadowCameraFov = 50;\n    this.light.shadowBias = 0.001;\n    this.light.shadowDarkness = 10;\n    this.light.shadowMapWidth = 1024;\n    this.light.shadowMapHeight = 1024;\n    this.scene.add(this.light);\n    if (this.desk) this.scene.remove(this.desk);\n    this.desk = new THREE.Mesh(new THREE.PlaneGeometry(this.w * 2, this.h, 1, 1), new THREE.MeshPhongMaterial({\n      color: that.desk_color,\n      opacity: 0.5,\n      transparent: true\n    }));\n    this.desk.receiveShadow = that.use_shadows;\n    this.scene.add(this.desk);\n    this.renderer.render(this.scene, this.camera);\n  };\n\n  function make_random_vector(vector) {\n    var random_angle = rnd() * Math.PI / 5 - Math.PI / 5 / 2;\n    var vec = {\n      x: vector.x * Math.cos(random_angle) - vector.y * Math.sin(random_angle),\n      y: vector.x * Math.sin(random_angle) + vector.y * Math.cos(random_angle)\n    };\n    if (vec.x == 0) vec.x = 0.01;\n    if (vec.y == 0) vec.y = 0.01;\n    return vec;\n  }\n\n  this.dice_box.prototype.generate_vectors = function (notation, vector, boost) {\n    var vectors = [];\n\n    for (var i in notation.set) {\n      var vec = make_random_vector(vector);\n      var pos = {\n        x: this.w * (vec.x > 0 ? -1 : 1) * 0.9,\n        y: this.h * (vec.y > 0 ? -1 : 1) * 0.9,\n        z: rnd() * 200 + 200\n      };\n      var projector = Math.abs(vec.x / vec.y);\n      if (projector > 1.0) pos.y /= projector;else pos.x *= projector;\n      var velvec = make_random_vector(vector);\n      var velocity = {\n        x: velvec.x * boost,\n        y: velvec.y * boost,\n        z: -10\n      };\n      var inertia = that.dice_inertia[notation.set[i]];\n      var angle = {\n        x: -(rnd() * vec.y * 5 + inertia * vec.y),\n        y: rnd() * vec.x * 5 + inertia * vec.x,\n        z: 0\n      };\n      var axis = {\n        x: rnd(),\n        y: rnd(),\n        z: rnd(),\n        a: rnd()\n      };\n      vectors.push({\n        set: notation.set[i],\n        pos: pos,\n        velocity: velocity,\n        angle: angle,\n        axis: axis\n      });\n    }\n\n    return vectors;\n  };\n\n  this.dice_box.prototype.create_dice = function (type, pos, velocity, angle, axis) {\n    var dice = that['create_' + type]();\n    dice.castShadow = true;\n    dice.dice_type = type;\n    dice.body = new CANNON.RigidBody(that.dice_mass[type], dice.geometry.cannon_shape, this.dice_body_material);\n    dice.body.position.set(pos.x, pos.y, pos.z);\n    dice.body.quaternion.setFromAxisAngle(new CANNON.Vec3(axis.x, axis.y, axis.z), axis.a * Math.PI * 2);\n    dice.body.angularVelocity.set(angle.x, angle.y, angle.z);\n    dice.body.velocity.set(velocity.x, velocity.y, velocity.z);\n    dice.body.linearDamping = 0.1;\n    dice.body.angularDamping = 0.1;\n    this.scene.add(dice);\n    this.dices.push(dice);\n    this.world.add(dice.body);\n  };\n\n  this.dice_box.prototype.check_if_throw_finished = function () {\n    var res = true;\n    var e = 6;\n\n    if (this.iteration < 10 / that.frame_rate) {\n      for (var i = 0; i < this.dices.length; ++i) {\n        var dice = this.dices[i];\n        if (dice.dice_stopped === true) continue;\n        var a = dice.body.angularVelocity,\n            v = dice.body.velocity;\n\n        if (Math.abs(a.x) < e && Math.abs(a.y) < e && Math.abs(a.z) < e && Math.abs(v.x) < e && Math.abs(v.y) < e && Math.abs(v.z) < e) {\n          if (dice.dice_stopped) {\n            if (this.iteration - dice.dice_stopped > 3) {\n              dice.dice_stopped = true;\n              continue;\n            }\n          } else dice.dice_stopped = this.iteration;\n\n          res = false;\n        } else {\n          dice.dice_stopped = undefined;\n          res = false;\n        }\n      }\n    }\n\n    return res;\n  };\n\n  function get_dice_value(dice) {\n    var vector = new THREE.Vector3(0, 0, dice.dice_type == 'd4' ? -1 : 1);\n    var closest_face,\n        closest_angle = Math.PI * 2;\n\n    for (var i = 0, l = dice.geometry.faces.length; i < l; ++i) {\n      var face = dice.geometry.faces[i];\n      if (face.materialIndex == 0) continue;\n      var angle = face.normal.clone().applyQuaternion(dice.body.quaternion).angleTo(vector);\n\n      if (angle < closest_angle) {\n        closest_angle = angle;\n        closest_face = face;\n      }\n    }\n\n    var matindex = closest_face.materialIndex - 1;\n    if (dice.dice_type == 'd100') matindex *= 10;\n    if (dice.dice_type == 'd10' && matindex == 0) matindex = 10;\n    return matindex;\n  }\n\n  function get_dice_values(dices) {\n    var values = [];\n\n    for (var i = 0, l = dices.length; i < l; ++i) {\n      values.push(get_dice_value(dices[i]));\n    }\n\n    return values;\n  }\n\n  this.dice_box.prototype.emulate_throw = function () {\n    while (!this.check_if_throw_finished()) {\n      ++this.iteration;\n      this.world.step(that.frame_rate);\n    }\n\n    return get_dice_values(this.dices);\n  };\n\n  this.dice_box.prototype.__animate = function (threadid) {\n    var time = new Date().getTime();\n    var time_diff = (time - this.last_time) / 1000;\n    if (time_diff > 3) time_diff = that.frame_rate;\n    ++this.iteration;\n\n    if (this.use_adapvite_timestep) {\n      while (time_diff > that.frame_rate * 1.1) {\n        this.world.step(that.frame_rate);\n        time_diff -= that.frame_rate;\n      }\n\n      this.world.step(time_diff);\n    } else {\n      this.world.step(that.frame_rate);\n    }\n\n    for (var i in this.scene.children) {\n      var interact = this.scene.children[i];\n\n      if (interact.body != undefined) {\n        interact.position.copy(interact.body.position);\n        interact.quaternion.copy(interact.body.quaternion);\n      }\n    }\n\n    this.renderer.render(this.scene, this.camera);\n    this.last_time = this.last_time ? time : new Date().getTime();\n\n    if (this.running == threadid && this.check_if_throw_finished()) {\n      this.running = false;\n      if (this.callback) this.callback.call(this, get_dice_values(this.dices));\n    }\n\n    if (this.running == threadid) {\n      (function (t, tid, uat) {\n        if (!uat && time_diff < that.frame_rate) {\n          setTimeout(function () {\n            requestAnimationFrame(function () {\n              t.__animate(tid);\n            });\n          }, (that.frame_rate - time_diff) * 1000);\n        } else requestAnimationFrame(function () {\n          t.__animate(tid);\n        });\n      })(this, threadid, this.use_adapvite_timestep);\n    }\n  };\n\n  this.dice_box.prototype.clear = function () {\n    this.running = false;\n    var dice;\n\n    while (dice = this.dices.pop()) {\n      this.scene.remove(dice);\n      if (dice.body) this.world.remove(dice.body);\n    }\n\n    if (this.pane) this.scene.remove(this.pane);\n    this.renderer.render(this.scene, this.camera);\n    var box = this;\n    setTimeout(function () {\n      box.renderer.render(box.scene, box.camera);\n    }, 100);\n  };\n\n  this.dice_box.prototype.prepare_dices_for_roll = function (vectors) {\n    this.clear();\n    this.iteration = 0;\n\n    for (var i in vectors) {\n      this.create_dice(vectors[i].set, vectors[i].pos, vectors[i].velocity, vectors[i].angle, vectors[i].axis);\n    }\n  };\n\n  function shift_dice_faces(dice, value, res) {\n    var r = that.dice_face_range[dice.dice_type];\n    if (dice.dice_type == 'd10' && value == 10) value = 0;\n    if (!(value >= r[0] && value <= r[1])) return;\n    var num = value - res;\n    var geom = dice.geometry.clone();\n\n    for (var i = 0, l = geom.faces.length; i < l; ++i) {\n      var matindex = geom.faces[i].materialIndex;\n      if (matindex == 0) continue;\n      matindex += num - 1;\n\n      while (matindex > r[1]) {\n        matindex -= r[1];\n      }\n\n      while (matindex < r[0]) {\n        matindex += r[1];\n      }\n\n      geom.faces[i].materialIndex = matindex + 1;\n    }\n\n    if (dice.dice_type == 'd4' && num != 0) {\n      if (num < 0) num += 4;\n      dice.material = new THREE.MeshFaceMaterial(that.create_d4_materials(that.scale / 2, that.scale * 2, d4_labels[num]));\n    }\n\n    dice.geometry = geom;\n  }\n\n  this.dice_box.prototype.roll = function (vectors, values, callback) {\n    this.prepare_dices_for_roll(vectors);\n\n    if (values != undefined && values.length) {\n      this.use_adapvite_timestep = false;\n      var res = this.emulate_throw();\n      this.prepare_dices_for_roll(vectors);\n\n      for (var i in res) {\n        shift_dice_faces(this.dices[i], values[i], res[i]);\n      }\n    }\n\n    this.callback = callback;\n    this.running = new Date().getTime();\n    this.last_time = 0;\n\n    this.__animate(this.running);\n  };\n\n  this.dice_box.prototype.__selector_animate = function (threadid) {\n    var time = new Date().getTime();\n    var time_diff = (time - this.last_time) / 1000;\n    if (time_diff > 3) time_diff = that.frame_rate;\n    var angle_change = 0.3 * time_diff * Math.PI * Math.min(24000 + threadid - time, 6000) / 6000;\n    if (angle_change < 0) this.running = false;\n\n    for (var i in this.dices) {\n      this.dices[i].rotation.y += angle_change;\n      this.dices[i].rotation.x += angle_change / 4;\n      this.dices[i].rotation.z += angle_change / 10;\n    }\n\n    this.last_time = time;\n    this.renderer.render(this.scene, this.camera);\n\n    if (this.running == threadid) {\n      (function (t, tid) {\n        requestAnimationFrame(function () {\n          t.__selector_animate(tid);\n        });\n      })(this, threadid);\n    }\n  };\n\n  this.dice_box.prototype.search_dice_by_mouse = function (ev) {\n    var m = $t.get_mouse_coords(ev);\n    var intersects = new THREE.Raycaster(this.camera.position, new THREE.Vector3((m.x - this.cw) / this.aspect, 1 - (m.y - this.ch) / this.aspect, this.w / 9).sub(this.camera.position).normalize()).intersectObjects(this.dices);\n    if (intersects.length) return intersects[0].object.userData;\n  };\n\n  this.dice_box.prototype.draw_selector = function () {\n    this.clear();\n  };\n\n  function throw_dices(box, vector, boost, dist, notation_getter, before_roll, after_roll) {\n    var uat = $t.dice.use_adapvite_timestep;\n\n    function roll(request_results) {\n      if (after_roll) {\n        box.clear();\n        box.roll(vectors, request_results || notation.result, function (result) {\n          if (after_roll) after_roll.call(box, notation, result);\n          box.rolling = false;\n          $t.dice.use_adapvite_timestep = uat;\n        });\n      }\n    }\n\n    vector.x /= dist;\n    vector.y /= dist;\n    var notation = notation_getter.call(box);\n    if (notation.set.length == 0) return;\n    var vectors = box.generate_vectors(notation, vector, boost);\n    box.rolling = true;\n    if (before_roll) before_roll.call(box, vectors, notation, roll);else roll();\n  }\n\n  this.dice_box.prototype.bind_mouse = function (container, notation_getter, before_roll, after_roll) {\n    var box = this;\n    $t.bind(container, ['mousedown', 'touchstart'], function (ev) {\n      ev.preventDefault();\n      box.mouse_time = new Date().getTime();\n      box.mouse_start = $t.get_mouse_coords(ev);\n    });\n    $t.bind(container, ['mouseup', 'touchend'], function (ev) {\n      if (box.rolling) return;\n      if (box.mouse_start == undefined) return;\n      ev.stopPropagation();\n      var m = $t.get_mouse_coords(ev);\n      var vector = {\n        x: m.x - box.mouse_start.x,\n        y: -(m.y - box.mouse_start.y)\n      };\n      box.mouse_start = undefined;\n      var dist = Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n      if (dist < Math.sqrt(box.w * box.h * 0.01)) return;\n      var time_int = new Date().getTime() - box.mouse_time;\n      if (time_int > 2000) time_int = 2000;\n      var boost = Math.sqrt((2500 - time_int) / 2500) * dist * 2;\n      prepare_rnd(function () {\n        throw_dices(box, vector, boost, dist, notation_getter, before_roll, after_roll);\n      });\n    });\n  };\n\n  this.dice_box.prototype.bind_throw = function (button, notation_getter, before_roll, after_roll) {\n    var box = this;\n    $t.bind(button, ['mouseup', 'touchend'], function (ev) {\n      ev.stopPropagation();\n      box.start_throw(notation_getter, before_roll, after_roll);\n    });\n  };\n\n  this.dice_box.prototype.start_throw = function (notation_getter, before_roll, after_roll) {\n    var box = this;\n    if (box.rolling) return;\n    prepare_rnd(function () {\n      var vector = {\n        x: (rnd() * 2 - 1) * box.w,\n        y: -(rnd() * 2 - 1) * box.h\n      };\n      var dist = Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n      var boost = (rnd() + 3) * dist;\n      throw_dices(box, vector, boost, dist, notation_getter, before_roll, after_roll);\n    });\n  };\n}).apply(teal.dice = teal.dice || {});","map":{"version":3,"names":["THREE","CANNON","dice","random_storage","use_true_random","frame_rate","prepare_rnd","callback","length","$t","rpc","method","n","random_responce","error","result","random","data","e","rnd","pop","Math","create_shape","vertices","faces","radius","cv","Array","cf","i","v","Vec3","x","y","z","slice","ConvexPolyhedron","make_geom","tab","af","geom","Geometry","vertex","multiplyScalar","index","push","ii","fl","aa","PI","j","Face3","faceVertexUvs","Vector2","cos","sin","computeFaceNormals","boundingSphere","Sphere","Vector3","chamfer_geom","vectors","chamfer","chamfer_vectors","chamfer_faces","corner_faces","center_point","face","vv","clone","add","divideScalar","subVectors","addVectors","pairs","lastm","m","indexOf","unshift","count","next_vertex","create_geom","fromArray","normalize","cg","cannon_shape","standart_d20_dice_face_labels","standart_d100_dice_face_labels","calc_texture_size","approx","pow","floor","log","create_dice_materials","face_labels","size","margin","create_text_texture","text","color","back_color","undefined","canvas","document","createElement","context","getContext","ts","width","height","font","fillStyle","fillRect","textAlign","textBaseline","fillText","texture","Texture","needsUpdate","materials","MeshPhongMaterial","copyto","material_options","map","label_color","dice_color","d4_labels","create_d4_materials","labels","create_d4_text","translate","rotate","create_d4_geometry","create_d6_geometry","create_d8_geometry","create_d10_geometry","a","k","h","b","create_d12_geometry","p","sqrt","q","create_d20_geometry","t","specular","shininess","shading","FlatShading","ambient_light_color","spot_light_color","selector_back_colors","emissive","desk_color","use_shadows","known_types","dice_face_range","dice_mass","dice_inertia","scale","create_d4","d4_geometry","d4_material","MeshFaceMaterial","Mesh","create_d6","d6_geometry","dice_material","create_d8","d8_geometry","create_d10","d10_geometry","create_d12","d12_geometry","create_d20","d20_geometry","create_d100","d100_material","parse_notation","notation","no","split","dr0","dr1","ret","set","constant","res","exec","command","parseInt","type","stringify_notation","nn","dict","abs","that","dice_box","container","dimentions","use_adapvite_timestep","animate_selector","dices","scene","Scene","world","World","renderer","window","WebGLRenderingContext","WebGLRenderer","antialias","alpha","CanvasRenderer","appendChild","domElement","shadowMap","enabled","PCFShadowMap","setClearColor","reinit","gravity","broadphase","NaiveBroadphase","solver","iterations","ambientLight","AmbientLight","dice_body_material","Material","desk_body_material","barrier_body_material","addContactMaterial","ContactMaterial","RigidBody","Plane","barrier","quaternion","setFromAxisAngle","position","w","last_time","running","render","camera","prototype","cw","clientWidth","ch","clientHeight","aspect","min","setSize","wh","tan","remove","PerspectiveCamera","mw","max","light","SpotLight","target","distance","castShadow","shadowCameraNear","shadowCameraFar","shadowCameraFov","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","desk","PlaneGeometry","opacity","transparent","receiveShadow","make_random_vector","vector","random_angle","vec","generate_vectors","boost","pos","projector","velvec","velocity","inertia","angle","axis","create_dice","dice_type","body","geometry","angularVelocity","linearDamping","angularDamping","check_if_throw_finished","iteration","dice_stopped","get_dice_value","closest_face","closest_angle","l","materialIndex","normal","applyQuaternion","angleTo","matindex","get_dice_values","values","emulate_throw","step","__animate","threadid","time","Date","getTime","time_diff","children","interact","copy","call","tid","uat","setTimeout","requestAnimationFrame","clear","pane","box","prepare_dices_for_roll","shift_dice_faces","value","r","num","material","roll","__selector_animate","angle_change","rotation","search_dice_by_mouse","ev","get_mouse_coords","intersects","Raycaster","sub","intersectObjects","object","userData","draw_selector","throw_dices","dist","notation_getter","before_roll","after_roll","request_results","rolling","bind_mouse","bind","preventDefault","mouse_time","mouse_start","stopPropagation","time_int","bind_throw","button","start_throw","apply","teal"],"sources":["/home/alex/react-dice/dice/dice.js"],"sourcesContent":["import * as THREE from './../libs/three.min.js'\r\nimport * as CANNON from './../libs/cannon.min.js'\r\nimport './../teal.js'\r\n\r\n\"use strict\";\r\n\r\n(function(dice) {\r\n\r\n    var random_storage = [];\r\n    this.use_true_random = true;\r\n    this.frame_rate = 1 / 60;\r\n\r\n    function prepare_rnd(callback) {\r\n        if (!random_storage.length && $t.dice.use_true_random) {\r\n            try {\r\n                $t.rpc({ method: \"random\", n: 512 }, \r\n                function(random_responce) {\r\n                    if (!random_responce.error)\r\n                        random_storage = random_responce.result.random.data;\r\n                    else $t.dice.use_true_random = false;\r\n                    callback();\r\n                });\r\n                return;\r\n            }\r\n            catch (e) { $t.dice.use_true_random = false; }\r\n        }\r\n        callback();\r\n    }\r\n\r\n    function rnd() {\r\n        return random_storage.length ? random_storage.pop() : Math.random();\r\n    }\r\n\r\n    function create_shape(vertices, faces, radius) {\r\n        var cv = new Array(vertices.length), cf = new Array(faces.length);\r\n        for (var i = 0; i < vertices.length; ++i) {\r\n            var v = vertices[i];\r\n            cv[i] = new CANNON.Vec3(v.x * radius, v.y * radius, v.z * radius);\r\n        }\r\n        for (var i = 0; i < faces.length; ++i) {\r\n            cf[i] = faces[i].slice(0, faces[i].length - 1);\r\n        }\r\n        return new CANNON.ConvexPolyhedron(cv, cf);\r\n    }\r\n\r\n    function make_geom(vertices, faces, radius, tab, af) {\r\n        var geom = new THREE.Geometry();\r\n        for (var i = 0; i < vertices.length; ++i) {\r\n            var vertex = vertices[i].multiplyScalar(radius);\r\n            vertex.index = geom.vertices.push(vertex) - 1;\r\n        }\r\n        for (var i = 0; i < faces.length; ++i) {\r\n            var ii = faces[i], fl = ii.length - 1;\r\n            var aa = Math.PI * 2 / fl;\r\n            for (var j = 0; j < fl - 2; ++j) {\r\n                geom.faces.push(new THREE.Face3(ii[0], ii[j + 1], ii[j + 2], [geom.vertices[ii[0]],\r\n                            geom.vertices[ii[j + 1]], geom.vertices[ii[j + 2]]], 0, ii[fl] + 1));\r\n                geom.faceVertexUvs[0].push([\r\n                        new THREE.Vector2((Math.cos(af) + 1 + tab) / 2 / (1 + tab),\r\n                            (Math.sin(af) + 1 + tab) / 2 / (1 + tab)),\r\n                        new THREE.Vector2((Math.cos(aa * (j + 1) + af) + 1 + tab) / 2 / (1 + tab),\r\n                            (Math.sin(aa * (j + 1) + af) + 1 + tab) / 2 / (1 + tab)),\r\n                        new THREE.Vector2((Math.cos(aa * (j + 2) + af) + 1 + tab) / 2 / (1 + tab),\r\n                            (Math.sin(aa * (j + 2) + af) + 1 + tab) / 2 / (1 + tab))]);\r\n            }\r\n        }\r\n        geom.computeFaceNormals();\r\n        geom.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\r\n        return geom;\r\n    }\r\n\r\n    function chamfer_geom(vectors, faces, chamfer) {\r\n        var chamfer_vectors = [], chamfer_faces = [], corner_faces = new Array(vectors.length);\r\n        for (var i = 0; i < vectors.length; ++i) corner_faces[i] = [];\r\n        for (var i = 0; i < faces.length; ++i) {\r\n            var ii = faces[i], fl = ii.length - 1;\r\n            var center_point = new THREE.Vector3();\r\n            var face = new Array(fl);\r\n            for (var j = 0; j < fl; ++j) {\r\n                var vv = vectors[ii[j]].clone();\r\n                center_point.add(vv);\r\n                corner_faces[ii[j]].push(face[j] = chamfer_vectors.push(vv) - 1);\r\n            }\r\n            center_point.divideScalar(fl);\r\n            for (var j = 0; j < fl; ++j) {\r\n                var vv = chamfer_vectors[face[j]];\r\n                vv.subVectors(vv, center_point).multiplyScalar(chamfer).addVectors(vv, center_point);\r\n            }\r\n            face.push(ii[fl]);\r\n            chamfer_faces.push(face);\r\n        }\r\n        for (var i = 0; i < faces.length - 1; ++i) {\r\n            for (var j = i + 1; j < faces.length; ++j) {\r\n                var pairs = [], lastm = -1;\r\n                for (var m = 0; m < faces[i].length - 1; ++m) {\r\n                    var n = faces[j].indexOf(faces[i][m]);\r\n                    if (n >= 0 && n < faces[j].length - 1) {\r\n                        if (lastm >= 0 && m != lastm + 1) pairs.unshift([i, m], [j, n]);\r\n                        else pairs.push([i, m], [j, n]);\r\n                        lastm = m;\r\n                    }\r\n                }\r\n                if (pairs.length != 4) continue;\r\n                chamfer_faces.push([chamfer_faces[pairs[0][0]][pairs[0][1]],\r\n                        chamfer_faces[pairs[1][0]][pairs[1][1]],\r\n                        chamfer_faces[pairs[3][0]][pairs[3][1]],\r\n                        chamfer_faces[pairs[2][0]][pairs[2][1]], -1]);\r\n            }\r\n        }\r\n        for (var i = 0; i < corner_faces.length; ++i) {\r\n            var cf = corner_faces[i], face = [cf[0]], count = cf.length - 1;\r\n            while (count) {\r\n                for (var m = faces.length; m < chamfer_faces.length; ++m) {\r\n                    var index = chamfer_faces[m].indexOf(face[face.length - 1]);\r\n                    if (index >= 0 && index < 4) {\r\n                        if (--index == -1) index = 3;\r\n                        var next_vertex = chamfer_faces[m][index];\r\n                        if (cf.indexOf(next_vertex) >= 0) {\r\n                            face.push(next_vertex);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                --count;\r\n            }\r\n            face.push(-1);\r\n            chamfer_faces.push(face);\r\n        }\r\n        return { vectors: chamfer_vectors, faces: chamfer_faces };\r\n    }\r\n\r\n    function create_geom(vertices, faces, radius, tab, af, chamfer) {\r\n        var vectors = new Array(vertices.length);\r\n        for (var i = 0; i < vertices.length; ++i) {\r\n            vectors[i] = (new THREE.Vector3).fromArray(vertices[i]).normalize();\r\n        }\r\n        var cg = chamfer_geom(vectors, faces, chamfer);\r\n        var geom = make_geom(cg.vectors, cg.faces, radius, tab, af);\r\n        //var geom = make_geom(vectors, faces, radius, tab, af); // Without chamfer\r\n        geom.cannon_shape = create_shape(vectors, faces, radius);\r\n        return geom;\r\n    }\r\n\r\n    this.standart_d20_dice_face_labels = [' ', '0', '1', '2', '3', '4', '5', '6', '7', '8',\r\n            '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20'];\r\n    this.standart_d100_dice_face_labels = [' ', '00', '10', '20', '30', '40', '50',\r\n            '60', '70', '80', '90'];\r\n\r\n    function calc_texture_size(approx) {\r\n        return Math.pow(2, Math.floor(Math.log(approx) / Math.log(2)));\r\n    }\r\n\r\n    this.create_dice_materials = function(face_labels, size, margin) {\r\n        function create_text_texture(text, color, back_color) {\r\n            if (text == undefined) return null;\r\n            var canvas = document.createElement(\"canvas\");\r\n            var context = canvas.getContext(\"2d\");\r\n            var ts = calc_texture_size(size + size * 2 * margin) * 2;\r\n            canvas.width = canvas.height = ts;\r\n            context.font = ts / (1 + 2 * margin) + \"pt Arial\";\r\n            context.fillStyle = back_color;\r\n            context.fillRect(0, 0, canvas.width, canvas.height);\r\n            context.textAlign = \"center\";\r\n            context.textBaseline = \"middle\";\r\n            context.fillStyle = color;\r\n            context.fillText(text, canvas.width / 2, canvas.height / 2);\r\n            if (text == '6' || text == '9') {\r\n                context.fillText('  .', canvas.width / 2, canvas.height / 2);\r\n            }\r\n            var texture = new THREE.Texture(canvas);\r\n            texture.needsUpdate = true;\r\n            return texture;\r\n        }\r\n        var materials = [];\r\n        for (var i = 0; i < face_labels.length; ++i)\r\n            materials.push(new THREE.MeshPhongMaterial($t.copyto(this.material_options,\r\n                        { map: create_text_texture(face_labels[i], this.label_color, this.dice_color) })));\r\n        return materials;\r\n    }\r\n\r\n    var d4_labels = [\r\n        [[], [0, 0, 0], [2, 4, 3], [1, 3, 4], [2, 1, 4], [1, 2, 3]],\r\n        [[], [0, 0, 0], [2, 3, 4], [3, 1, 4], [2, 4, 1], [3, 2, 1]],\r\n        [[], [0, 0, 0], [4, 3, 2], [3, 4, 1], [4, 2, 1], [3, 1, 2]],\r\n        [[], [0, 0, 0], [4, 2, 3], [1, 4, 3], [4, 1, 2], [1, 3, 2]]\r\n    ];\r\n\r\n    this.create_d4_materials = function(size, margin, labels) {\r\n        function create_d4_text(text, color, back_color) {\r\n            var canvas = document.createElement(\"canvas\");\r\n            var context = canvas.getContext(\"2d\");\r\n            var ts = calc_texture_size(size + margin) * 2;\r\n            canvas.width = canvas.height = ts;\r\n            context.font = (ts - margin) / 1.5 + \"pt Arial\";\r\n            context.fillStyle = back_color;\r\n            context.fillRect(0, 0, canvas.width, canvas.height);\r\n            context.textAlign = \"center\";\r\n            context.textBaseline = \"middle\";\r\n            context.fillStyle = color;\r\n            for (var i in text) {\r\n                context.fillText(text[i], canvas.width / 2,\r\n                        canvas.height / 2 - ts * 0.3);\r\n                context.translate(canvas.width / 2, canvas.height / 2);\r\n                context.rotate(Math.PI * 2 / 3);\r\n                context.translate(-canvas.width / 2, -canvas.height / 2);\r\n            }\r\n            var texture = new THREE.Texture(canvas);\r\n            texture.needsUpdate = true;\r\n            return texture;\r\n        }\r\n        var materials = [];\r\n        for (var i = 0; i < labels.length; ++i)\r\n            materials.push(new THREE.MeshPhongMaterial($t.copyto(this.material_options,\r\n                        { map: create_d4_text(labels[i], this.label_color, this.dice_color) })));\r\n        return materials;\r\n    }\r\n\r\n    this.create_d4_geometry = function(radius) {\r\n        var vertices = [[1, 1, 1], [-1, -1, 1], [-1, 1, -1], [1, -1, -1]];\r\n        var faces = [[1, 0, 2, 1], [0, 1, 3, 2], [0, 3, 2, 3], [1, 2, 3, 4]];\r\n        return create_geom(vertices, faces, radius, -0.1, Math.PI * 7 / 6, 0.96);\r\n    }\r\n\r\n    this.create_d6_geometry = function(radius) {\r\n        var vertices = [[-1, -1, -1], [1, -1, -1], [1, 1, -1], [-1, 1, -1],\r\n                [-1, -1, 1], [1, -1, 1], [1, 1, 1], [-1, 1, 1]];\r\n        var faces = [[0, 3, 2, 1, 1], [1, 2, 6, 5, 2], [0, 1, 5, 4, 3],\r\n                [3, 7, 6, 2, 4], [0, 4, 7, 3, 5], [4, 5, 6, 7, 6]];\r\n        return create_geom(vertices, faces, radius, 0.1, Math.PI / 4, 0.96);\r\n    }\r\n\r\n    this.create_d8_geometry = function(radius) {\r\n        var vertices = [[1, 0, 0], [-1, 0, 0], [0, 1, 0], [0, -1, 0], [0, 0, 1], [0, 0, -1]];\r\n        var faces = [[0, 2, 4, 1], [0, 4, 3, 2], [0, 3, 5, 3], [0, 5, 2, 4], [1, 3, 4, 5],\r\n                [1, 4, 2, 6], [1, 2, 5, 7], [1, 5, 3, 8]];\r\n        return create_geom(vertices, faces, radius, 0, -Math.PI / 4 / 2, 0.965);\r\n    }\r\n\r\n    this.create_d10_geometry = function(radius) {\r\n        var a = Math.PI * 2 / 10, k = Math.cos(a), h = 0.105, v = -1;\r\n        var vertices = [];\r\n        for (var i = 0, b = 0; i < 10; ++i, b += a)\r\n            vertices.push([Math.cos(b), Math.sin(b), h * (i % 2 ? 1 : -1)]);\r\n        vertices.push([0, 0, -1]); vertices.push([0, 0, 1]);\r\n        var faces = [[5, 7, 11, 0], [4, 2, 10, 1], [1, 3, 11, 2], [0, 8, 10, 3], [7, 9, 11, 4],\r\n                [8, 6, 10, 5], [9, 1, 11, 6], [2, 0, 10, 7], [3, 5, 11, 8], [6, 4, 10, 9],\r\n                [1, 0, 2, v], [1, 2, 3, v], [3, 2, 4, v], [3, 4, 5, v], [5, 4, 6, v],\r\n                [5, 6, 7, v], [7, 6, 8, v], [7, 8, 9, v], [9, 8, 0, v], [9, 0, 1, v]];\r\n        return create_geom(vertices, faces, radius, 0, Math.PI * 6 / 5, 0.945);\r\n    }\r\n\r\n    this.create_d12_geometry = function(radius) {\r\n        var p = (1 + Math.sqrt(5)) / 2, q = 1 / p;\r\n        var vertices = [[0, q, p], [0, q, -p], [0, -q, p], [0, -q, -p], [p, 0, q],\r\n                [p, 0, -q], [-p, 0, q], [-p, 0, -q], [q, p, 0], [q, -p, 0], [-q, p, 0],\r\n                [-q, -p, 0], [1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1],\r\n                [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]];\r\n        var faces = [[2, 14, 4, 12, 0, 1], [15, 9, 11, 19, 3, 2], [16, 10, 17, 7, 6, 3], [6, 7, 19, 11, 18, 4],\r\n                [6, 18, 2, 0, 16, 5], [18, 11, 9, 14, 2, 6], [1, 17, 10, 8, 13, 7], [1, 13, 5, 15, 3, 8],\r\n                [13, 8, 12, 4, 5, 9], [5, 4, 14, 9, 15, 10], [0, 12, 8, 10, 16, 11], [3, 19, 7, 17, 1, 12]];\r\n        return create_geom(vertices, faces, radius, 0.2, -Math.PI / 4 / 2, 0.968);\r\n    }\r\n\r\n    this.create_d20_geometry = function(radius) {\r\n        var t = (1 + Math.sqrt(5)) / 2;\r\n        var vertices = [[-1, t, 0], [1, t, 0 ], [-1, -t, 0], [1, -t, 0],\r\n                [0, -1, t], [0, 1, t], [0, -1, -t], [0, 1, -t],\r\n                [t, 0, -1], [t, 0, 1], [-t, 0, -1], [-t, 0, 1]];\r\n        var faces = [[0, 11, 5, 1], [0, 5, 1, 2], [0, 1, 7, 3], [0, 7, 10, 4], [0, 10, 11, 5],\r\n                [1, 5, 9, 6], [5, 11, 4, 7], [11, 10, 2, 8], [10, 7, 6, 9], [7, 1, 8, 10],\r\n                [3, 9, 4, 11], [3, 4, 2, 12], [3, 2, 6, 13], [3, 6, 8, 14], [3, 8, 9, 15],\r\n                [4, 9, 5, 16], [2, 4, 11, 17], [6, 2, 10, 18], [8, 6, 7, 19], [9, 8, 1, 20]];\r\n        return create_geom(vertices, faces, radius, -0.2, -Math.PI / 4 / 2, 0.955);\r\n    }\r\n\r\n    this.material_options = {\r\n        specular: 0x172022,\r\n        color: 0x00FFFFFF,\r\n        shininess: 20,\r\n        shading: THREE.FlatShading,\r\n    };\r\n    this.label_color = '#aaaaaa';\r\n    this.dice_color = '#202020';\r\n    this.ambient_light_color = 0x00FFFFFF;\r\n    this.spot_light_color = 0x00FFFFFF;\r\n    this.selector_back_colors = { color: 0x00FFFFFF, shininess: 0, emissive: 0x00FFFFFF };\r\n    \r\n    // dice box background color\r\n    this.desk_color = 'rgba(255, 0, 0)';\r\n    this.use_shadows = true;\r\n\r\n    this.known_types = ['d4', 'd6', 'd8', 'd10', 'd12', 'd20', 'd100'];\r\n    this.dice_face_range = { 'd4': [1, 4], 'd6': [1, 6], 'd8': [1, 8], 'd10': [0, 9], \r\n        'd12': [1, 12], 'd20': [1, 20], 'd100': [0, 9] };\r\n    this.dice_mass = { 'd4': 300, 'd6': 300, 'd8': 340, 'd10': 350, 'd12': 350, 'd20': 400, 'd100': 350 };\r\n    this.dice_inertia = { 'd4': 5, 'd6': 13, 'd8': 10, 'd10': 9, 'd12': 8, 'd20': 6, 'd100': 9 };\r\n\r\n    this.scale = 50;\r\n\r\n    this.create_d4 = function() {\r\n        if (!this.d4_geometry) this.d4_geometry = this.create_d4_geometry(this.scale * 1.2);\r\n        if (!this.d4_material) this.d4_material = new THREE.MeshFaceMaterial(\r\n                this.create_d4_materials(this.scale / 2, this.scale * 2, d4_labels[0]));\r\n        return new THREE.Mesh(this.d4_geometry, this.d4_material);\r\n    }\r\n\r\n    this.create_d6 = function() {\r\n        if (!this.d6_geometry) this.d6_geometry = this.create_d6_geometry(this.scale * 0.9);\r\n        if (!this.dice_material) this.dice_material = new THREE.MeshFaceMaterial(\r\n                this.create_dice_materials(this.standart_d20_dice_face_labels, this.scale / 2, 1.0));\r\n        return new THREE.Mesh(this.d6_geometry, this.dice_material);\r\n    }\r\n\r\n    this.create_d8 = function() {\r\n        if (!this.d8_geometry) this.d8_geometry = this.create_d8_geometry(this.scale);\r\n        if (!this.dice_material) this.dice_material = new THREE.MeshFaceMaterial(\r\n                this.create_dice_materials(this.standart_d20_dice_face_labels, this.scale / 2, 1.2));\r\n        return new THREE.Mesh(this.d8_geometry, this.dice_material);\r\n    }\r\n\r\n    this.create_d10 = function() {\r\n        if (!this.d10_geometry) this.d10_geometry = this.create_d10_geometry(this.scale * 0.9);\r\n        if (!this.dice_material) this.dice_material = new THREE.MeshFaceMaterial(\r\n                this.create_dice_materials(this.standart_d20_dice_face_labels, this.scale / 2, 1.0));\r\n        return new THREE.Mesh(this.d10_geometry, this.dice_material);\r\n    }\r\n\r\n    this.create_d12 = function() {\r\n        if (!this.d12_geometry) this.d12_geometry = this.create_d12_geometry(this.scale * 0.9);\r\n        if (!this.dice_material) this.dice_material = new THREE.MeshFaceMaterial(\r\n                this.create_dice_materials(this.standart_d20_dice_face_labels, this.scale / 2, 1.0));\r\n        return new THREE.Mesh(this.d12_geometry, this.dice_material);\r\n    }\r\n\r\n    this.create_d20 = function() {\r\n        if (!this.d20_geometry) this.d20_geometry = this.create_d20_geometry(this.scale);\r\n        if (!this.dice_material) this.dice_material = new THREE.MeshFaceMaterial(\r\n                this.create_dice_materials(this.standart_d20_dice_face_labels, this.scale / 2, 1.0));\r\n        return new THREE.Mesh(this.d20_geometry, this.dice_material);\r\n    }\r\n\r\n    this.create_d100 = function() {\r\n        if (!this.d10_geometry) this.d10_geometry = this.create_d10_geometry(this.scale * 0.9);\r\n        if (!this.d100_material) this.d100_material = new THREE.MeshFaceMaterial(\r\n                this.create_dice_materials(this.standart_d100_dice_face_labels, this.scale / 2, 1.5));\r\n        return new THREE.Mesh(this.d10_geometry, this.d100_material);\r\n    }\r\n\r\n    this.parse_notation = function(notation) {\r\n        var no = notation.split('@');\r\n        var dr0 = /\\s*(\\d*)([a-z]+)(\\d+)(\\s*(\\+|\\-)\\s*(\\d+)){0,1}\\s*(\\+|$)/gi;\r\n        var dr1 = /(\\b)*(\\d+)(\\b)*/gi;\r\n        var ret = { set: [], constant: 0, result: [], error: false }, res;\r\n        while (res = dr0.exec(no[0])) {\r\n            var command = res[2];\r\n            if (command != 'd') { ret.error = true; continue; }\r\n            var count = parseInt(res[1]);\r\n            if (res[1] == '') count = 1;\r\n            var type = 'd' + res[3];\r\n            if (this.known_types.indexOf(type) == -1) { ret.error = true; continue; }\r\n            while (count--) ret.set.push(type);\r\n            if (res[5] && res[6]) {\r\n                if (res[5] == '+') ret.constant += parseInt(res[6]);\r\n                else ret.constant -= parseInt(res[6]);\r\n            }\r\n        }\r\n        while (res = dr1.exec(no[1])) {\r\n            ret.result.push(parseInt(res[2]));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    this.stringify_notation = function(nn) {\r\n        var dict = {}, notation = '';\r\n        for (var i in nn.set) \r\n            if (!dict[nn.set[i]]) dict[nn.set[i]] = 1; else ++dict[nn.set[i]];\r\n        for (var i in dict) {\r\n            if (notation.length) notation += ' + ';\r\n            notation += (dict[i] > 1 ? dict[i] : '') + i;\r\n        }\r\n        if (nn.constant) {\r\n            if (nn.constant > 0) notation += ' + ' + nn.constant;\r\n            else notation += ' - ' + Math.abs(nn.constant);\r\n        }\r\n        return notation;\r\n    }\r\n\r\n    var that = this;\r\n\r\n    this.dice_box = function(container, dimentions) {\r\n        this.use_adapvite_timestep = true;\r\n        this.animate_selector = true;\r\n\r\n        this.dices = [];\r\n        this.scene = new THREE.Scene();\r\n        this.world = new CANNON.World();\r\n\r\n        this.renderer = window.WebGLRenderingContext\r\n            ? new THREE.WebGLRenderer({ antialias: true, alpha: true })\r\n            : new THREE.CanvasRenderer({ antialias: true, alpha: true });\r\n        container.appendChild(this.renderer.domElement);\r\n        this.renderer.shadowMap.enabled = true;\r\n        this.renderer.shadowMap.type = THREE.PCFShadowMap;\r\n\r\n        //set outer white color -----------------------\r\n        this.renderer.setClearColor(0x000000, 0);\r\n\r\n        this.reinit(container, dimentions);\r\n\r\n        this.world.gravity.set(0, 0, -9.8 * 800);\r\n        this.world.broadphase = new CANNON.NaiveBroadphase();\r\n        this.world.solver.iterations = 16;\r\n\r\n        var ambientLight = new THREE.AmbientLight(that.ambient_light_color);\r\n        this.scene.add(ambientLight);\r\n\r\n        this.dice_body_material = new CANNON.Material();\r\n        var desk_body_material = new CANNON.Material();\r\n        var barrier_body_material = new CANNON.Material();\r\n        this.world.addContactMaterial(new CANNON.ContactMaterial(\r\n                    desk_body_material, this.dice_body_material, 0.01, 0.5));\r\n        this.world.addContactMaterial(new CANNON.ContactMaterial(\r\n                    barrier_body_material, this.dice_body_material, 0, 1.0));\r\n        this.world.addContactMaterial(new CANNON.ContactMaterial(\r\n                    this.dice_body_material, this.dice_body_material, 0, 0.5));\r\n\r\n        this.world.add(new CANNON.RigidBody(0, new CANNON.Plane(), desk_body_material));\r\n        var barrier;\r\n        barrier = new CANNON.RigidBody(0, new CANNON.Plane(), barrier_body_material);\r\n        barrier.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), Math.PI / 2);\r\n        barrier.position.set(0, this.h * 1.43, 0);\r\n        this.world.add(barrier);\r\n\r\n        barrier = new CANNON.RigidBody(0, new CANNON.Plane(), barrier_body_material);\r\n        barrier.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2);\r\n        barrier.position.set(0, -this.h * 1.5, 0);\r\n        this.world.add(barrier);\r\n\r\n        barrier = new CANNON.RigidBody(0, new CANNON.Plane(), barrier_body_material);\r\n        barrier.quaternion.setFromAxisAngle(new CANNON.Vec3(0, 1, 0), -Math.PI / 2);\r\n        barrier.position.set(this.w * 0.93, 0, 0);\r\n        this.world.add(barrier);\r\n\r\n        barrier = new CANNON.RigidBody(0, new CANNON.Plane(), barrier_body_material);\r\n        barrier.quaternion.setFromAxisAngle(new CANNON.Vec3(0, 1, 0), Math.PI / 2);\r\n        barrier.position.set(-this.w * 0.93, 0, 0);\r\n        this.world.add(barrier);\r\n\r\n        this.last_time = 0;\r\n        this.running = false;\r\n\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n\r\n    this.dice_box.prototype.reinit = function(container, dimentions) {\r\n        this.cw = container.clientWidth / 2;\r\n        this.ch = container.clientHeight / 1.1;\r\n        if (dimentions) {\r\n            this.w = dimentions.w;\r\n            this.h = dimentions.h;\r\n        }\r\n        else {\r\n            this.w = this.cw;\r\n            this.h = this.ch;\r\n        }\r\n        this.aspect = Math.min(this.cw / this.w, this.ch / this.h);\r\n        that.scale = Math.sqrt(this.w * this.w + this.h * this.h) / 8;\r\n\r\n        this.renderer.setSize(this.cw * 2, this.ch * 2);\r\n\r\n        this.wh = this.ch / this.aspect / Math.tan(10 * Math.PI / 180);\r\n        if (this.camera) this.scene.remove(this.camera);\r\n        this.camera = new THREE.PerspectiveCamera(20, this.cw / this.ch, 1, this.wh * 1.3);\r\n        this.camera.position.z = this.wh;\r\n\r\n        var mw = Math.max(this.w, this.h);\r\n        if (this.light) this.scene.remove(this.light);\r\n        this.light = new THREE.SpotLight(that.spot_light_color, 2.0);\r\n        this.light.position.set(-mw / 2, mw / 2, mw * 2);\r\n        this.light.target.position.set(0, 0, 0);\r\n        this.light.distance = mw * 5;\r\n        this.light.castShadow = true;\r\n        this.light.shadowCameraNear = mw / 10;\r\n        this.light.shadowCameraFar = mw * 5;\r\n        this.light.shadowCameraFov = 50;\r\n        this.light.shadowBias = 0.001;\r\n        this.light.shadowDarkness = 10;\r\n        this.light.shadowMapWidth = 1024;\r\n        this.light.shadowMapHeight = 1024;\r\n        this.scene.add(this.light);\r\n\r\n        if (this.desk) this.scene.remove(this.desk);\r\n        this.desk = new THREE.Mesh(new THREE.PlaneGeometry(this.w * 2, this.h, 1, 1), \r\n                new THREE.MeshPhongMaterial({ color: that.desk_color, opacity: 0.5,\r\n                    transparent: true }));\r\n        this.desk.receiveShadow = that.use_shadows;\r\n        this.scene.add(this.desk);\r\n\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n\r\n    function make_random_vector(vector) {\r\n        var random_angle = rnd() * Math.PI / 5 - Math.PI / 5 / 2;\r\n        var vec = {\r\n            x: vector.x * Math.cos(random_angle) - vector.y * Math.sin(random_angle),\r\n            y: vector.x * Math.sin(random_angle) + vector.y * Math.cos(random_angle)\r\n        };\r\n        if (vec.x == 0) vec.x = 0.01;\r\n        if (vec.y == 0) vec.y = 0.01;\r\n        return vec;\r\n    }\r\n\r\n    this.dice_box.prototype.generate_vectors = function(notation, vector, boost) {\r\n        var vectors = [];\r\n        for (var i in notation.set) {\r\n            var vec = make_random_vector(vector);\r\n            var pos = {\r\n                x: this.w * (vec.x > 0 ? -1 : 1) * 0.9,\r\n                y: this.h * (vec.y > 0 ? -1 : 1) * 0.9,\r\n                z: rnd() * 200 + 200\r\n            };\r\n            var projector = Math.abs(vec.x / vec.y);\r\n            if (projector > 1.0) pos.y /= projector; else pos.x *= projector;\r\n            var velvec = make_random_vector(vector);\r\n            var velocity = { x: velvec.x * boost, y: velvec.y * boost, z: -10 };\r\n            var inertia = that.dice_inertia[notation.set[i]];\r\n            var angle = {\r\n                x: -(rnd() * vec.y * 5 + inertia * vec.y),\r\n                y: rnd() * vec.x * 5 + inertia * vec.x,\r\n                z: 0\r\n            };\r\n            var axis = { x: rnd(), y: rnd(), z: rnd(), a: rnd() };\r\n            vectors.push({ set: notation.set[i], pos: pos, velocity: velocity, angle: angle, axis: axis });\r\n        }\r\n        return vectors;\r\n    }\r\n\r\n    this.dice_box.prototype.create_dice = function(type, pos, velocity, angle, axis) {\r\n        var dice = that['create_' + type]();\r\n        dice.castShadow = true;\r\n        dice.dice_type = type;\r\n        dice.body = new CANNON.RigidBody(that.dice_mass[type],\r\n                dice.geometry.cannon_shape, this.dice_body_material);\r\n        dice.body.position.set(pos.x, pos.y, pos.z);\r\n        dice.body.quaternion.setFromAxisAngle(new CANNON.Vec3(axis.x, axis.y, axis.z), axis.a * Math.PI * 2);\r\n        dice.body.angularVelocity.set(angle.x, angle.y, angle.z);\r\n        dice.body.velocity.set(velocity.x, velocity.y, velocity.z);\r\n        dice.body.linearDamping = 0.1;\r\n        dice.body.angularDamping = 0.1;\r\n        this.scene.add(dice);\r\n        this.dices.push(dice);\r\n        this.world.add(dice.body);\r\n    }\r\n\r\n    this.dice_box.prototype.check_if_throw_finished = function() {\r\n        var res = true;\r\n        var e = 6;\r\n        if (this.iteration < 10 / that.frame_rate) {\r\n            for (var i = 0; i < this.dices.length; ++i) {\r\n                var dice = this.dices[i];\r\n                if (dice.dice_stopped === true) continue;\r\n                var a = dice.body.angularVelocity, v = dice.body.velocity;\r\n                if (Math.abs(a.x) < e && Math.abs(a.y) < e && Math.abs(a.z) < e &&\r\n                        Math.abs(v.x) < e && Math.abs(v.y) < e && Math.abs(v.z) < e) {\r\n                    if (dice.dice_stopped) {\r\n                        if (this.iteration - dice.dice_stopped > 3) {\r\n                            dice.dice_stopped = true;\r\n                            continue;\r\n                        }\r\n                    }\r\n                    else dice.dice_stopped = this.iteration;\r\n                    res = false;\r\n                }\r\n                else {\r\n                    dice.dice_stopped = undefined;\r\n                    res = false;\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    function get_dice_value(dice) {\r\n        var vector = new THREE.Vector3(0, 0, dice.dice_type == 'd4' ? -1 : 1);\r\n        var closest_face, closest_angle = Math.PI * 2;\r\n        for (var i = 0, l = dice.geometry.faces.length; i < l; ++i) {\r\n            var face = dice.geometry.faces[i];\r\n            if (face.materialIndex == 0) continue;\r\n            var angle = face.normal.clone().applyQuaternion(dice.body.quaternion).angleTo(vector);\r\n            if (angle < closest_angle) {\r\n                closest_angle = angle;\r\n                closest_face = face;\r\n            }\r\n        }\r\n        var matindex = closest_face.materialIndex - 1;\r\n        if (dice.dice_type == 'd100') matindex *= 10;\r\n        if (dice.dice_type == 'd10' && matindex == 0) matindex = 10;\r\n        return matindex;\r\n    }\r\n\r\n    function get_dice_values(dices) {\r\n        var values = [];\r\n        for (var i = 0, l = dices.length; i < l; ++i) {\r\n            values.push(get_dice_value(dices[i]));\r\n        }\r\n        return values;\r\n    }\r\n\r\n    this.dice_box.prototype.emulate_throw = function() {\r\n        while (!this.check_if_throw_finished()) {\r\n            ++this.iteration;\r\n            this.world.step(that.frame_rate);\r\n        }\r\n        return get_dice_values(this.dices);\r\n    }\r\n\r\n    this.dice_box.prototype.__animate = function(threadid) {\r\n        var time = (new Date()).getTime();\r\n        var time_diff = (time - this.last_time) / 1000;\r\n        if (time_diff > 3) time_diff = that.frame_rate;\r\n        ++this.iteration;\r\n        if (this.use_adapvite_timestep) {\r\n            while (time_diff > that.frame_rate * 1.1) {\r\n                this.world.step(that.frame_rate);\r\n                time_diff -= that.frame_rate;\r\n            }\r\n            this.world.step(time_diff);\r\n        }\r\n        else {\r\n            this.world.step(that.frame_rate);\r\n        }\r\n        for (var i in this.scene.children) {\r\n            var interact = this.scene.children[i];\r\n            if (interact.body != undefined) {\r\n                interact.position.copy(interact.body.position);\r\n                interact.quaternion.copy(interact.body.quaternion);\r\n            }\r\n        }\r\n        this.renderer.render(this.scene, this.camera);\r\n        this.last_time = this.last_time ? time : (new Date()).getTime();\r\n        if (this.running == threadid && this.check_if_throw_finished()) {\r\n            this.running = false;\r\n            if (this.callback) this.callback.call(this, get_dice_values(this.dices));\r\n        }\r\n        if (this.running == threadid) {\r\n            (function(t, tid, uat) {\r\n                if (!uat && time_diff < that.frame_rate) {\r\n                    setTimeout(function() { requestAnimationFrame(function() { t.__animate(tid); }); },\r\n                        (that.frame_rate - time_diff) * 1000);\r\n                }\r\n                else requestAnimationFrame(function() { t.__animate(tid); });\r\n            })(this, threadid, this.use_adapvite_timestep);\r\n        }\r\n    }\r\n\r\n    this.dice_box.prototype.clear = function() {\r\n        this.running = false;\r\n        var dice;\r\n        while (dice = this.dices.pop()) {\r\n            this.scene.remove(dice); \r\n            if (dice.body) this.world.remove(dice.body);\r\n        }\r\n        if (this.pane) this.scene.remove(this.pane);\r\n        this.renderer.render(this.scene, this.camera);\r\n        var box = this;\r\n        setTimeout(function() { box.renderer.render(box.scene, box.camera); }, 100);\r\n    }\r\n\r\n    this.dice_box.prototype.prepare_dices_for_roll = function(vectors) {\r\n        this.clear();\r\n        this.iteration = 0;\r\n        for (var i in vectors) {\r\n            this.create_dice(vectors[i].set, vectors[i].pos, vectors[i].velocity,\r\n                    vectors[i].angle, vectors[i].axis);\r\n        }\r\n    }\r\n\r\n    function shift_dice_faces(dice, value, res) {\r\n        var r = that.dice_face_range[dice.dice_type];\r\n        if (dice.dice_type == 'd10' && value == 10) value = 0;\r\n        if (!(value >= r[0] && value <= r[1])) return;\r\n        var num = value - res;\r\n        var geom = dice.geometry.clone();\r\n        for (var i = 0, l = geom.faces.length; i < l; ++i) {\r\n            var matindex = geom.faces[i].materialIndex;\r\n            if (matindex == 0) continue;\r\n            matindex += num - 1;\r\n            while (matindex > r[1]) matindex -= r[1];\r\n            while (matindex < r[0]) matindex += r[1];\r\n            geom.faces[i].materialIndex = matindex + 1;\r\n        }\r\n        if (dice.dice_type == 'd4' && num != 0) {\r\n            if (num < 0) num += 4;\r\n            dice.material = new THREE.MeshFaceMaterial(\r\n                    that.create_d4_materials(that.scale / 2, that.scale * 2, d4_labels[num]));\r\n        }\r\n        dice.geometry = geom;\r\n    }\r\n\r\n    this.dice_box.prototype.roll = function(vectors, values, callback) {\r\n        this.prepare_dices_for_roll(vectors);\r\n        if (values != undefined && values.length) {\r\n            this.use_adapvite_timestep = false;\r\n            var res = this.emulate_throw();\r\n            this.prepare_dices_for_roll(vectors);\r\n            for (var i in res)\r\n                shift_dice_faces(this.dices[i], values[i], res[i]);\r\n        }\r\n        this.callback = callback;\r\n        this.running = (new Date()).getTime();\r\n        this.last_time = 0;\r\n        this.__animate(this.running);\r\n    }\r\n\r\n    this.dice_box.prototype.__selector_animate = function(threadid) {\r\n        var time = (new Date()).getTime();\r\n        var time_diff = (time - this.last_time) / 1000;\r\n        if (time_diff > 3) time_diff = that.frame_rate;\r\n        var angle_change = 0.3 * time_diff * Math.PI * Math.min(24000 + threadid - time, 6000) / 6000;\r\n        if (angle_change < 0) this.running = false;\r\n        for (var i in this.dices) {\r\n            this.dices[i].rotation.y += angle_change;\r\n            this.dices[i].rotation.x += angle_change / 4;\r\n            this.dices[i].rotation.z += angle_change / 10;\r\n        }\r\n        this.last_time = time;\r\n        this.renderer.render(this.scene, this.camera);\r\n        if (this.running == threadid) {\r\n            (function(t, tid) {\r\n                requestAnimationFrame(function() { t.__selector_animate(tid); });\r\n            })(this, threadid);\r\n        }\r\n    }\r\n\r\n    this.dice_box.prototype.search_dice_by_mouse = function(ev) {\r\n        var m = $t.get_mouse_coords(ev);\r\n        var intersects = (new THREE.Raycaster(this.camera.position, \r\n                    (new THREE.Vector3((m.x - this.cw) / this.aspect,\r\n                                       1 - (m.y - this.ch) / this.aspect, this.w / 9))\r\n                    .sub(this.camera.position).normalize())).intersectObjects(this.dices);\r\n        if (intersects.length) return intersects[0].object.userData;\r\n    }\r\n\r\n    this.dice_box.prototype.draw_selector = function() {\r\n        this.clear();\r\n\r\n        //makes selector screen\r\n\r\n\r\n        // var step = this.w / 4.5;\r\n        // this.pane = new THREE.Mesh(new THREE.PlaneGeometry(this.w * 6, this.h * 6, 1, 1), \r\n        //         new THREE.MeshPhongMaterial(that.selector_back_colors));\r\n        // this.pane.receiveShadow = true;\r\n        // this.pane.position.set(0, 0, 1);\r\n        // this.scene.add(this.pane);\r\n\r\n        // var mouse_captured = false;\r\n\r\n        // for (var i = 0, pos = -3; i < that.known_types.length; ++i, ++pos) {\r\n        //     var dice = $t.dice['create_' + that.known_types[i]]();\r\n        //     dice.position.set(pos * step, 0, step * 0.5);\r\n        //     dice.castShadow = true;\r\n        //     dice.userData = that.known_types[i];\r\n        //     this.dices.push(dice); this.scene.add(dice);\r\n        // }\r\n\r\n        // this.running = (new Date()).getTime();\r\n        // this.last_time = 0;\r\n        // if (this.animate_selector) this.__selector_animate(this.running);\r\n        // else this.renderer.render(this.scene, this.camera);\r\n    }\r\n\r\n    function throw_dices(box, vector, boost, dist, notation_getter, before_roll, after_roll) {\r\n        var uat = $t.dice.use_adapvite_timestep;\r\n        function roll(request_results) {\r\n            if (after_roll) {\r\n                box.clear();\r\n                box.roll(vectors, request_results || notation.result, function(result) {\r\n                    // shows results after roll and calls a function once the dice stops moving\r\n                    if (after_roll) after_roll.call(box, notation, result);\r\n                    box.rolling = false;\r\n                    $t.dice.use_adapvite_timestep = uat;\r\n                });\r\n            }\r\n        }\r\n        vector.x /= dist; vector.y /= dist;\r\n        var notation = notation_getter.call(box);\r\n        if (notation.set.length == 0) return;\r\n        var vectors = box.generate_vectors(notation, vector, boost);\r\n        box.rolling = true;\r\n        if (before_roll) before_roll.call(box, vectors, notation, roll);\r\n        else roll();\r\n    }\r\n\r\n    this.dice_box.prototype.bind_mouse = function(container, notation_getter, before_roll, after_roll) {\r\n        var box = this;\r\n        $t.bind(container, ['mousedown', 'touchstart'], function(ev) {\r\n            ev.preventDefault();\r\n            box.mouse_time = (new Date()).getTime();\r\n            box.mouse_start = $t.get_mouse_coords(ev);\r\n        });\r\n        $t.bind(container, ['mouseup', 'touchend'], function(ev) {\r\n            if (box.rolling) return;\r\n            if (box.mouse_start == undefined) return;\r\n            ev.stopPropagation();\r\n            var m = $t.get_mouse_coords(ev);\r\n            var vector = { x: m.x - box.mouse_start.x, y: -(m.y - box.mouse_start.y) };\r\n            box.mouse_start = undefined;\r\n            var dist = Math.sqrt(vector.x * vector.x + vector.y * vector.y);\r\n            if (dist < Math.sqrt(box.w * box.h * 0.01)) return;\r\n            var time_int = (new Date()).getTime() - box.mouse_time;\r\n            if (time_int > 2000) time_int = 2000;\r\n            var boost = Math.sqrt((2500 - time_int) / 2500) * dist * 2;\r\n            prepare_rnd(function() {\r\n                throw_dices(box, vector, boost, dist, notation_getter, before_roll, after_roll);\r\n            });\r\n        });\r\n    }\r\n\r\n    this.dice_box.prototype.bind_throw = function(button, notation_getter, before_roll, after_roll) {\r\n        var box = this;\r\n        $t.bind(button, ['mouseup', 'touchend'], function(ev) {\r\n            ev.stopPropagation();\r\n            box.start_throw(notation_getter, before_roll, after_roll);\r\n        });\r\n    }\r\n\r\n    this.dice_box.prototype.start_throw = function(notation_getter, before_roll, after_roll) {\r\n        var box = this;\r\n        if (box.rolling) return;\r\n        prepare_rnd(function() {\r\n            var vector = { x: (rnd() * 2 - 1) * box.w, y: -(rnd() * 2 - 1) * box.h };\r\n            var dist = Math.sqrt(vector.x * vector.x + vector.y * vector.y);\r\n            var boost = (rnd() + 3) * dist;\r\n            throw_dices(box, vector, boost, dist, notation_getter, before_roll, after_roll);\r\n        });\r\n    }\r\n\r\n}).apply(teal.dice = teal.dice || {});\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}