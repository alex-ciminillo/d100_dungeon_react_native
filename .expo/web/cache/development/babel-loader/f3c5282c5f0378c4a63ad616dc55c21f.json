{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DashBoard(_ref) {\n  var rollRoom = _ref.rollRoom,\n      setRollRoom = _ref.setRollRoom,\n      setDiceInput = _ref.setDiceInput,\n      setMapModal = _ref.setMapModal,\n      setRoomNumber = _ref.setRoomNumber,\n      roomInput = _ref.roomInput,\n      diceInput = _ref.diceInput,\n      hideDice = _ref.hideDice,\n      showDice = _ref.showDice;\n  var backgroundColor = 'green';\n\n  if (rollRoom === 'On') {\n    backgroundColor = 'green';\n  } else {\n    backgroundColor = 'rgb(185, 0, 0)';\n  }\n\n  function toggleRollRoom() {\n    if (rollRoom === 'On') {\n      setRollRoom('Off');\n    } else {\n      setRollRoom('On');\n    }\n  }\n\n  return _jsxs(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-around'\n    },\n    children: [_jsxs(\"div\", {\n      className: \"center_field\",\n      children: [_jsx(\"div\", {\n        style: {\n          display: 'none',\n          flexDirection: 'row'\n        },\n        children: _jsx(\"span\", {\n          style: {\n            display: 'none'\n          },\n          id: \"label\"\n        })\n      }), _jsx(\"button\", {\n        style: {\n          display: 'none'\n        },\n        id: \"clear\",\n        onClick: function onClick() {\n          hideDice();\n        },\n        children: \"clear\"\n      }), _jsx(\"button\", {\n        style: {\n          marginLeft: \"0.6em\",\n          display: 'none'\n        },\n        onClick: function onClick() {\n          showDice();\n        },\n        id: \"throw\",\n        children: \"throw\"\n      })]\n    }), _jsxs(\"div\", {\n      children: [_jsxs(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [_jsx(\"div\", {\n          children: \"Room #\"\n        }), _jsx(\"input\", {\n          style: {\n            height: '13px',\n            width: '20px',\n            marginLeft: '5px'\n          },\n          onChange: function onChange(e) {\n            return setRoomNumber(e.target.value);\n          },\n          value: roomInput\n        })]\n      }), _jsxs(\"div\", {\n        children: [\"Roll Room: \", _jsx(\"button\", {\n          onClick: function onClick() {\n            toggleRollRoom();\n          },\n          style: {\n            backgroundColor: \"\" + backgroundColor,\n            color: 'white',\n            border: 'none',\n            cursor: 'pointer',\n            borderRadius: '5px'\n          },\n          children: rollRoom\n        })]\n      })]\n    }), _jsx(\"button\", {\n      onClick: function onClick() {\n        setMapModal(true);\n      },\n      children: \"Map\"\n    })]\n  });\n}","map":{"version":3,"names":["DashBoard","rollRoom","setRollRoom","setDiceInput","setMapModal","setRoomNumber","roomInput","diceInput","hideDice","showDice","backgroundColor","toggleRollRoom","display","justifyContent","flexDirection","marginLeft","height","width","e","target","value","color","border","cursor","borderRadius"],"sources":["/home/alex/react-dice/components/dashboard/DashBoard.js"],"sourcesContent":["\n\n\n\n\nexport default function DashBoard( {rollRoom, setRollRoom, setDiceInput, setMapModal, setRoomNumber, roomInput, diceInput, hideDice, showDice} ) {\n\n  let backgroundColor = 'green'\n  if (rollRoom === 'On') {\n    backgroundColor = 'green'\n  } else {\n    backgroundColor = 'rgb(185, 0, 0)'\n  }\n\n    function toggleRollRoom() {\n      if (rollRoom === 'On') {\n        setRollRoom('Off')\n      } else {\n        setRollRoom('On')\n      }\n    }\n\n    return (\n        <div style={{display: 'flex', justifyContent: 'space-around'}} >\n          <div className=\"center_field\">\n            <div style={{display: 'none', flexDirection: 'row'}} >\n            {/* <input type=\"text\" id=\"set\" value={diceInput} onChange={e => setDiceInput(e.target.value)} ></input><br/> */}\n            <span style={{display: 'none'}} id=\"label\"></span>\n            </div>\n            <button style={{display: 'none'}} id=\"clear\" onClick={()=>{hideDice()}} >clear</button>\n            <button style={{marginLeft: \"0.6em\", display: 'none'}} onClick={()=>{showDice()}} id=\"throw\">throw</button>\n          </div>\n          <div>\n          <div style={{display:'flex'}} >\n            <div>Room #</div>\n            <input style={{height: '13px', width: '20px', marginLeft:'5px'}} onChange={e => setRoomNumber(e.target.value)} value={roomInput} />\n          </div>\n          <div>Roll Room: <button onClick={()=>{toggleRollRoom()}} style={{backgroundColor: `${backgroundColor}`, color: 'white', border: 'none', cursor: 'pointer', borderRadius: '5px'}} >{rollRoom}</button></div>\n          </div>\n          <button onClick={()=>{setMapModal(true)}} >Map</button>\n        </div>\n    )\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";;AAKA,eAAe,SAASA,SAAT,OAAkI;EAAA,IAA7GC,QAA6G,QAA7GA,QAA6G;EAAA,IAAnGC,WAAmG,QAAnGA,WAAmG;EAAA,IAAtFC,YAAsF,QAAtFA,YAAsF;EAAA,IAAxEC,WAAwE,QAAxEA,WAAwE;EAAA,IAA3DC,aAA2D,QAA3DA,aAA2D;EAAA,IAA5CC,SAA4C,QAA5CA,SAA4C;EAAA,IAAjCC,SAAiC,QAAjCA,SAAiC;EAAA,IAAtBC,QAAsB,QAAtBA,QAAsB;EAAA,IAAZC,QAAY,QAAZA,QAAY;EAE/I,IAAIC,eAAe,GAAG,OAAtB;;EACA,IAAIT,QAAQ,KAAK,IAAjB,EAAuB;IACrBS,eAAe,GAAG,OAAlB;EACD,CAFD,MAEO;IACLA,eAAe,GAAG,gBAAlB;EACD;;EAEC,SAASC,cAAT,GAA0B;IACxB,IAAIV,QAAQ,KAAK,IAAjB,EAAuB;MACrBC,WAAW,CAAC,KAAD,CAAX;IACD,CAFD,MAEO;MACLA,WAAW,CAAC,IAAD,CAAX;IACD;EACF;;EAED,OACI;IAAK,KAAK,EAAE;MAACU,OAAO,EAAE,MAAV;MAAkBC,cAAc,EAAE;IAAlC,CAAZ;IAAA,WACE;MAAK,SAAS,EAAC,cAAf;MAAA,WACE;QAAK,KAAK,EAAE;UAACD,OAAO,EAAE,MAAV;UAAkBE,aAAa,EAAE;QAAjC,CAAZ;QAAA,UAEA;UAAM,KAAK,EAAE;YAACF,OAAO,EAAE;UAAV,CAAb;UAAgC,EAAE,EAAC;QAAnC;MAFA,EADF,EAKE;QAAQ,KAAK,EAAE;UAACA,OAAO,EAAE;QAAV,CAAf;QAAkC,EAAE,EAAC,OAArC;QAA6C,OAAO,EAAE,mBAAI;UAACJ,QAAQ;QAAG,CAAtE;QAAA;MAAA,EALF,EAME;QAAQ,KAAK,EAAE;UAACO,UAAU,EAAE,OAAb;UAAsBH,OAAO,EAAE;QAA/B,CAAf;QAAuD,OAAO,EAAE,mBAAI;UAACH,QAAQ;QAAG,CAAhF;QAAkF,EAAE,EAAC,OAArF;QAAA;MAAA,EANF;IAAA,EADF,EASE;MAAA,WACA;QAAK,KAAK,EAAE;UAACG,OAAO,EAAC;QAAT,CAAZ;QAAA,WACE;UAAA;QAAA,EADF,EAEE;UAAO,KAAK,EAAE;YAACI,MAAM,EAAE,MAAT;YAAiBC,KAAK,EAAE,MAAxB;YAAgCF,UAAU,EAAC;UAA3C,CAAd;UAAiE,QAAQ,EAAE,kBAAAG,CAAC;YAAA,OAAIb,aAAa,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;UAAA,CAA5E;UAA+G,KAAK,EAAEd;QAAtH,EAFF;MAAA,EADA,EAKA;QAAA,0BAAgB;UAAQ,OAAO,EAAE,mBAAI;YAACK,cAAc;UAAG,CAAvC;UAAyC,KAAK,EAAE;YAACD,eAAe,OAAKA,eAArB;YAAwCW,KAAK,EAAE,OAA/C;YAAwDC,MAAM,EAAE,MAAhE;YAAwEC,MAAM,EAAE,SAAhF;YAA2FC,YAAY,EAAE;UAAzG,CAAhD;UAAA,UAAmKvB;QAAnK,EAAhB;MAAA,EALA;IAAA,EATF,EAgBE;MAAQ,OAAO,EAAE,mBAAI;QAACG,WAAW,CAAC,IAAD,CAAX;MAAkB,CAAxC;MAAA;IAAA,EAhBF;EAAA,EADJ;AAqBH"},"metadata":{},"sourceType":"module"}